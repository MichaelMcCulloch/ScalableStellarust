{
	"version": "2.0.0",
	"tasks": [
		//
		// 	Infrastructure::Vagrant::Up
		//
		{
			"label": "Infrastructure::Vagrant::Up",
			"type": "shell",
			"command": "vagrant up --parallel",
			"group": "build",
			"dependsOn": [
				"Infrastructure::Vagrant::CopyEfiVars",
			]
		},
		//
		// 	Infrastructure::Virsh::Destroy
		//  This must be done untill vagrant destroy can accomodate the nvram.
		{
			"label": "Infrastructure::Virsh::Destroy",
			"type": "shell",
			"command": [
				"virsh --connect qemu:///system list --all | ",
				" grep stellarust | ",
				" awk '{ print $2 }' | ",
				" xargs -I % -n 1 -- virsh --connect qemu:///system undefine % --nvram  --remove-all-storage || true",
			],
			"group": "build",
		},
		//
		// 	Infrastructure::Virsh::Halt
		//
		{
			"label": "Infrastructure::Virsh::Halt",
			"type": "shell",
			"command": [
				"virsh --connect qemu:///system list --all | ",
				" grep stellarust | ",
				" awk '{ print $2 }' | ",
				" xargs -n 1 -- virsh --connect qemu:///system destroy || true",
			],
			"group": "build",
		},
		//
		// 	Infrastructure::Vagrant::Provision
		//
		{
			"label": "Infrastructure::Vagrant::Provision",
			"type": "shell",
			"command": "vagrant up --parallel --provision",
			"group": "build",
			"dependsOn": [
				"Infrastructure::Vagrant::CopyEfiVars",
			]
		},
		//
		// 	Infrastructure::Vagrant::Destroy
		//
		{
			"label": "Infrastructure::Vagrant::Destroy",
			"group": "build",
			"dependsOrder": "sequence",
			"dependsOn": [
				"Infrastructure::Virsh::Halt",
				"Infrastructure::Virsh::Destroy",
			]
		},
		//
		// 	Infrastructure::E2E::Redeploy
		//
		{
			"label": "Infrastructure::E2E::Redeploy",
			"group": "build",
			"dependsOrder": "sequence",
			"dependsOn": [
				"Infrastructure::Vagrant::Destroy",
				"Infrastructure::Vagrant::Up",
				"Infrastructure::Ansible::DeployDatacenter"
			]
		},
		//
		// 	Infrastructure::E2E::Deploy
		//
		{
			"label": "Infrastructure::E2E::Deploy",
			"group": "build",
			"dependsOrder": "sequence",
			"dependsOn": [
				"Infrastructure::Vagrant::Up",
				"Infrastructure::Ansible::DeployDatacenter"
			]
		},
		//
		// 	Infrastructure::Vagrant::CopyEfiVars 
		//
		{
			"label": "Infrastructure::Vagrant::CopyEfiVars",
			"group": "build",
			"type": "shell",
			"command": "cp archlinux-EFI_VARS.fd /tmp/",
		},
		//
		// 	Infrastructure::Ansible::ShutdownNow
		//
		{
			"label": "Infrastructure::Ansible::ShutdownNow",
			"type": "shell",
			"command": [
				"ansible all",
				" -i ../.vagrant/provisioners/ansible/inventory/vagrant_ansible_inventory",
				" -i inventories/inv.ini",
				" -m ansible.builtin.shell",
				" -a 'shutdown now'",
				" -u root",
				" -e 'ansible_user=root'",
				" -e 'ansible_ssh_private_key_file=~/.ssh/id_rsa'"
			],
			"group": "build",
			"options": {
				"cwd": "${workspaceFolder}/ansible",
				" env": {
					"ANSIBLE_STDOUT_CALLBACK": "debug",
					"ANSIBLE_STDERR_CALLBACK": "debug"
				}
			},
		},
		//
		// 	Infrastructure::Ansible::DeployDatacenter
		//
		{
			"label": "Infrastructure::Ansible::DeployDatacenter",
			"type": "shell",
			"command": [
				"ansible-playbook",
				" -i ../.vagrant/provisioners/ansible/inventory/vagrant_ansible_inventory",
				" -i inventories/inv.ini",
				" deploy_datacenter.yml",
				" -e 'ansible_user=root'",
				" -e 'ansible_ssh_private_key_file=~/.ssh/id_rsa'",
				" -u root",
			],
			"options": {
				"cwd": "${workspaceFolder}/ansible",
				" env": {
					"ANSIBLE_STDOUT_CALLBACK": "debug",
					"ANSIBLE_STDERR_CALLBACK": "debug"
				}
			},
			"group": "build",
		},
		//
		// 	Infrastructure::Ansible::TeardownDatacenter
		//
		{
			"label": "Infrastructure::Ansible::TeardownDatacenter",
			"type": "shell",
			"command": [
				"ansible-playbook",
				" -i inventories/inv.ini",
				" teardown_datacenter.yml",
				" -u root",
			],
			"options": {
				"cwd": "${workspaceFolder}/ansible",
				" env": {
					"ANSIBLE_STDOUT_CALLBACK": "debug",
					"ANSIBLE_STDERR_CALLBACK": "debug"
				}
			},
			"group": "build",
		},
	]
}