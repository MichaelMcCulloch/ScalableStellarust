{
    "kind": "NodeList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "1160"
    },
    "items": [
        {
            "metadata": {
                "name": "element-01",
                "uid": "e84e5545-d2c2-4f6f-963a-56a817741180",
                "resourceVersion": "942",
                "creationTimestamp": "2022-04-30T17:02:06Z",
                "labels": {
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "element-01",
                    "kubernetes.io/os": "linux",
                    "node-role.kubernetes.io/control-plane": "",
                    "node-role.kubernetes.io/master": "",
                    "node.kubernetes.io/exclude-from-external-load-balancers": ""
                },
                "annotations": {
                    "kubeadm.alpha.kubernetes.io/cri-socket": "/var/run/dockershim.sock",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.11.0.0/24",
                "podCIDRs": [
                    "10.11.0.0/24"
                ],
                "taints": [
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "effect": "NoSchedule"
                    }
                ]
            },
            "status": {
                "capacity": {
                    "cpu": "32",
                    "ephemeral-storage": "20969452Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "8132784Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "32",
                    "ephemeral-storage": "19325446932",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "8030384Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2022-04-30T17:07:14Z",
                        "lastTransitionTime": "2022-04-30T17:02:05Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2022-04-30T17:07:14Z",
                        "lastTransitionTime": "2022-04-30T17:02:05Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2022-04-30T17:07:14Z",
                        "lastTransitionTime": "2022-04-30T17:02:05Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "False",
                        "lastHeartbeatTime": "2022-04-30T17:07:14Z",
                        "lastTransitionTime": "2022-04-30T17:02:05Z",
                        "reason": "KubeletNotReady",
                        "message": "container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:docker: network plugin is not ready: cni config uninitialized"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "10.11.11.157"
                    },
                    {
                        "type": "Hostname",
                        "address": "element-01"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "357500944f6b440a9433ccf60dfecef5",
                    "systemUUID": "35750094-4f6b-440a-9433-ccf60dfecef5",
                    "bootID": "f8ecb4b3-edea-426d-8442-2e8de2751af7",
                    "kernelVersion": "5.17.3-arch1-1",
                    "osImage": "Arch Linux",
                    "containerRuntimeVersion": "docker://20.10.14",
                    "kubeletVersion": "v1.23.6",
                    "kubeProxyVersion": "v1.23.6",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "k8s.gcr.io/etcd@sha256:64b9ea357325d5db9f8a723dcf503b5a449177b17ac87d69481e126bb724c263",
                            "k8s.gcr.io/etcd:3.5.1-0"
                        ],
                        "sizeBytes": 292552228
                    },
                    {
                        "names": [
                            "calico/cni@sha256:757d06fe361c0083ee12dcd7d01a5ad98d6afd84bc92566e9cbd15ab2434e855",
                            "calico/cni:v3.22.2"
                        ],
                        "sizeBytes": 235597948
                    },
                    {
                        "names": [
                            "calico/node@sha256:41aac6d0a440746f03d03a2912d92809681d07b6ce0ca4649241a1b95ff5e513",
                            "calico/node:v3.22.2"
                        ],
                        "sizeBytes": 197897942
                    },
                    {
                        "names": [
                            "k8s.gcr.io/kube-apiserver@sha256:0cd8c0bed8d89d914ee5df41e8a40112fb0a28804429c7964296abedc94da9f1",
                            "k8s.gcr.io/kube-apiserver:v1.23.6"
                        ],
                        "sizeBytes": 135164011
                    },
                    {
                        "names": [
                            "k8s.gcr.io/kube-controller-manager@sha256:df94796b78d2285ffe6b231c2b39d25034dde8814de2f75d953a827e77fe6adf",
                            "k8s.gcr.io/kube-controller-manager:v1.23.6"
                        ],
                        "sizeBytes": 124985727
                    },
                    {
                        "names": [
                            "k8s.gcr.io/kube-proxy@sha256:cc007fb495f362f18c74e6f5552060c6785ca2b802a5067251de55c7cc880741",
                            "k8s.gcr.io/kube-proxy:v1.23.6"
                        ],
                        "sizeBytes": 112333207
                    },
                    {
                        "names": [
                            "k8s.gcr.io/kube-scheduler@sha256:02b4e994459efa49c3e2392733e269893e23d4ac46e92e94107652963caae78b",
                            "k8s.gcr.io/kube-scheduler:v1.23.6"
                        ],
                        "sizeBytes": 53490075
                    },
                    {
                        "names": [
                            "k8s.gcr.io/coredns/coredns@sha256:5b6ec0d6de9baaf3e92d0f66cd96a25b9edbce8716f5f15dcd1a616b3abd590e",
                            "k8s.gcr.io/coredns/coredns:v1.8.6"
                        ],
                        "sizeBytes": 46816637
                    },
                    {
                        "names": [
                            "calico/pod2daemon-flexvol@sha256:413c5ebad6a5796a5571796b5ba2d2114bc0a318144db3070a631dd256a96d8a",
                            "calico/pod2daemon-flexvol:v3.22.2"
                        ],
                        "sizeBytes": 19657474
                    },
                    {
                        "names": [
                            "k8s.gcr.io/pause@sha256:3d380ca8864549e74af4b29c10f9cb0956236dfb01c40ca076fb6c37253234db",
                            "k8s.gcr.io/pause:3.6"
                        ],
                        "sizeBytes": 682696
                    }
                ]
            }
        }
    ]
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "1160"
    },
    "items": [
        {
            "metadata": {
                "name": "calico-kube-controllers-7c845d499-mqdj7.16eabb4a4daa93d7",
                "namespace": "kube-system",
                "uid": "29f4273c-032d-4689-8a01-720d53ed88ec",
                "resourceVersion": "1124",
                "creationTimestamp": "2022-04-30T17:02:21Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "calico-kube-controllers-7c845d499-mqdj7",
                "uid": "a586aa43-ede2-423c-a1f6-21d2c524ae1a",
                "apiVersion": "v1",
                "resourceVersion": "518"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had taint {node.kubernetes.io/not-ready: }, that the pod didn't tolerate.",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2022-04-30T17:02:21Z",
            "lastTimestamp": "2022-04-30T17:09:38Z",
            "count": 8,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "calico-kube-controllers-7c845d499.16eabb4a4da69bf1",
                "namespace": "kube-system",
                "uid": "9050eed2-7244-4a78-88c5-63ff31102ba2",
                "resourceVersion": "527",
                "creationTimestamp": "2022-04-30T17:02:21Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "calico-kube-controllers-7c845d499",
                "uid": "7b2aa543-b583-45b8-bd53-e8ec239a8348",
                "apiVersion": "apps/v1",
                "resourceVersion": "464"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: calico-kube-controllers-7c845d499-mqdj7",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2022-04-30T17:02:21Z",
            "lastTimestamp": "2022-04-30T17:02:21Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "calico-kube-controllers.16eabb4a063d9584",
                "namespace": "kube-system",
                "uid": "6259ddb9-1d4a-4301-b4a2-a70965b72df8",
                "resourceVersion": "516",
                "creationTimestamp": "2022-04-30T17:02:21Z"
            },
            "involvedObject": {
                "kind": "PodDisruptionBudget",
                "namespace": "kube-system",
                "name": "calico-kube-controllers",
                "uid": "ac3b780b-9fdd-415c-985a-9f0de27d56f5",
                "apiVersion": "policy/v1",
                "resourceVersion": "395"
            },
            "reason": "NoPods",
            "message": "No matching pods found",
            "source": {
                "component": "controllermanager"
            },
            "firstTimestamp": "2022-04-30T17:02:19Z",
            "lastTimestamp": "2022-04-30T17:02:21Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "calico-kube-controllers.16eabb4a0d3cfc81",
                "namespace": "kube-system",
                "uid": "8cacaac0-af98-4a81-9d6a-28a2eaab9112",
                "resourceVersion": "467",
                "creationTimestamp": "2022-04-30T17:02:20Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "kube-system",
                "name": "calico-kube-controllers",
                "uid": "faf23266-c6e6-4d57-a679-665f7a8d669b",
                "apiVersion": "apps/v1",
                "resourceVersion": "389"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled up replica set calico-kube-controllers-7c845d499 to 1",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2022-04-30T17:02:20Z",
            "lastTimestamp": "2022-04-30T17:02:20Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "calico-node-rtrnd.16eabb4a3250f325",
                "namespace": "kube-system",
                "uid": "462deb72-6869-483f-8b14-93b9ef8132c5",
                "resourceVersion": "485",
                "creationTimestamp": "2022-04-30T17:02:20Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "calico-node-rtrnd",
                "uid": "57f5a8f6-2c7c-4536-aba0-a972e87673db",
                "apiVersion": "v1",
                "resourceVersion": "479"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/calico-node-rtrnd to element-01",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2022-04-30T17:02:20Z",
            "lastTimestamp": "2022-04-30T17:02:20Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "calico-node-rtrnd.16eabb4a7af4ddfe",
                "namespace": "kube-system",
                "uid": "6bbd4dcd-59c8-4fff-aaf3-19902f85c468",
                "resourceVersion": "538",
                "creationTimestamp": "2022-04-30T17:02:21Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "calico-node-rtrnd",
                "uid": "57f5a8f6-2c7c-4536-aba0-a972e87673db",
                "apiVersion": "v1",
                "resourceVersion": "482",
                "fieldPath": "spec.initContainers{upgrade-ipam}"
            },
            "reason": "Pulled",
            "message": "Container image \"docker.io/calico/cni:v3.22.2\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "element-01"
            },
            "firstTimestamp": "2022-04-30T17:02:21Z",
            "lastTimestamp": "2022-04-30T17:02:21Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "calico-node-rtrnd.16eabb4a8a099a69",
                "namespace": "kube-system",
                "uid": "8022d893-f38f-4cf9-a5b2-dcbed8fc693b",
                "resourceVersion": "541",
                "creationTimestamp": "2022-04-30T17:02:22Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "calico-node-rtrnd",
                "uid": "57f5a8f6-2c7c-4536-aba0-a972e87673db",
                "apiVersion": "v1",
                "resourceVersion": "482",
                "fieldPath": "spec.initContainers{upgrade-ipam}"
            },
            "reason": "Created",
            "message": "Created container upgrade-ipam",
            "source": {
                "component": "kubelet",
                "host": "element-01"
            },
            "firstTimestamp": "2022-04-30T17:02:22Z",
            "lastTimestamp": "2022-04-30T17:02:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "calico-node-rtrnd.16eabb4a99aef0ce",
                "namespace": "kube-system",
                "uid": "55ff9d7f-03b7-48a0-b618-95a9ea774b3c",
                "resourceVersion": "543",
                "creationTimestamp": "2022-04-30T17:02:22Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "calico-node-rtrnd",
                "uid": "57f5a8f6-2c7c-4536-aba0-a972e87673db",
                "apiVersion": "v1",
                "resourceVersion": "482",
                "fieldPath": "spec.initContainers{upgrade-ipam}"
            },
            "reason": "Started",
            "message": "Started container upgrade-ipam",
            "source": {
                "component": "kubelet",
                "host": "element-01"
            },
            "firstTimestamp": "2022-04-30T17:02:22Z",
            "lastTimestamp": "2022-04-30T17:02:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "calico-node-rtrnd.16eabb4ab81e8856",
                "namespace": "kube-system",
                "uid": "d1805d4d-8fb0-43dd-824a-058e70c5d016",
                "resourceVersion": "545",
                "creationTimestamp": "2022-04-30T17:02:22Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "calico-node-rtrnd",
                "uid": "57f5a8f6-2c7c-4536-aba0-a972e87673db",
                "apiVersion": "v1",
                "resourceVersion": "482",
                "fieldPath": "spec.initContainers{install-cni}"
            },
            "reason": "Pulled",
            "message": "Container image \"docker.io/calico/cni:v3.22.2\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "element-01"
            },
            "firstTimestamp": "2022-04-30T17:02:22Z",
            "lastTimestamp": "2022-04-30T17:02:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "calico-node-rtrnd.16eabb4ac2800e6f",
                "namespace": "kube-system",
                "uid": "c51d60d9-c553-4a1e-868e-a2827dd5615a",
                "resourceVersion": "549",
                "creationTimestamp": "2022-04-30T17:02:23Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "calico-node-rtrnd",
                "uid": "57f5a8f6-2c7c-4536-aba0-a972e87673db",
                "apiVersion": "v1",
                "resourceVersion": "482",
                "fieldPath": "spec.initContainers{install-cni}"
            },
            "reason": "Created",
            "message": "Created container install-cni",
            "source": {
                "component": "kubelet",
                "host": "element-01"
            },
            "firstTimestamp": "2022-04-30T17:02:23Z",
            "lastTimestamp": "2022-04-30T17:02:23Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "calico-node-rtrnd.16eabb4ad07c0fcd",
                "namespace": "kube-system",
                "uid": "5f752b28-81e4-45ee-816c-ae57be82de60",
                "resourceVersion": "551",
                "creationTimestamp": "2022-04-30T17:02:23Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "calico-node-rtrnd",
                "uid": "57f5a8f6-2c7c-4536-aba0-a972e87673db",
                "apiVersion": "v1",
                "resourceVersion": "482",
                "fieldPath": "spec.initContainers{install-cni}"
            },
            "reason": "Started",
            "message": "Started container install-cni",
            "source": {
                "component": "kubelet",
                "host": "element-01"
            },
            "firstTimestamp": "2022-04-30T17:02:23Z",
            "lastTimestamp": "2022-04-30T17:02:23Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "calico-node-rtrnd.16eabb4af6056421",
                "namespace": "kube-system",
                "uid": "6754a186-be76-48a1-83c5-fb89f6e0c567",
                "resourceVersion": "552",
                "creationTimestamp": "2022-04-30T17:02:24Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "calico-node-rtrnd",
                "uid": "57f5a8f6-2c7c-4536-aba0-a972e87673db",
                "apiVersion": "v1",
                "resourceVersion": "482",
                "fieldPath": "spec.initContainers{flexvol-driver}"
            },
            "reason": "Pulled",
            "message": "Container image \"docker.io/calico/pod2daemon-flexvol:v3.22.2\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "element-01"
            },
            "firstTimestamp": "2022-04-30T17:02:24Z",
            "lastTimestamp": "2022-04-30T17:02:24Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "calico-node-rtrnd.16eabb4b0155a8ce",
                "namespace": "kube-system",
                "uid": "df1fc94b-f937-4f17-841a-7c1d337b1589",
                "resourceVersion": "554",
                "creationTimestamp": "2022-04-30T17:02:24Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "calico-node-rtrnd",
                "uid": "57f5a8f6-2c7c-4536-aba0-a972e87673db",
                "apiVersion": "v1",
                "resourceVersion": "482",
                "fieldPath": "spec.initContainers{flexvol-driver}"
            },
            "reason": "Created",
            "message": "Created container flexvol-driver",
            "source": {
                "component": "kubelet",
                "host": "element-01"
            },
            "firstTimestamp": "2022-04-30T17:02:24Z",
            "lastTimestamp": "2022-04-30T17:02:24Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "calico-node-rtrnd.16eabb4b196e863a",
                "namespace": "kube-system",
                "uid": "338201fc-e2d3-4862-9110-14d934e57956",
                "resourceVersion": "555",
                "creationTimestamp": "2022-04-30T17:02:24Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "calico-node-rtrnd",
                "uid": "57f5a8f6-2c7c-4536-aba0-a972e87673db",
                "apiVersion": "v1",
                "resourceVersion": "482",
                "fieldPath": "spec.initContainers{flexvol-driver}"
            },
            "reason": "Started",
            "message": "Started container flexvol-driver",
            "source": {
                "component": "kubelet",
                "host": "element-01"
            },
            "firstTimestamp": "2022-04-30T17:02:24Z",
            "lastTimestamp": "2022-04-30T17:02:24Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "calico-node-rtrnd.16eabb4b324d9094",
                "namespace": "kube-system",
                "uid": "fec9ef3a-4599-49ac-9c71-82b279d48977",
                "resourceVersion": "557",
                "creationTimestamp": "2022-04-30T17:02:25Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "calico-node-rtrnd",
                "uid": "57f5a8f6-2c7c-4536-aba0-a972e87673db",
                "apiVersion": "v1",
                "resourceVersion": "482",
                "fieldPath": "spec.containers{calico-node}"
            },
            "reason": "Pulled",
            "message": "Container image \"docker.io/calico/node:v3.22.2\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "element-01"
            },
            "firstTimestamp": "2022-04-30T17:02:25Z",
            "lastTimestamp": "2022-04-30T17:02:25Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "calico-node-rtrnd.16eabb4b3f4020df",
                "namespace": "kube-system",
                "uid": "0c7093e9-ed8e-48bf-9220-a3b5819ead25",
                "resourceVersion": "560",
                "creationTimestamp": "2022-04-30T17:02:25Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "calico-node-rtrnd",
                "uid": "57f5a8f6-2c7c-4536-aba0-a972e87673db",
                "apiVersion": "v1",
                "resourceVersion": "482",
                "fieldPath": "spec.containers{calico-node}"
            },
            "reason": "Created",
            "message": "Created container calico-node",
            "source": {
                "component": "kubelet",
                "host": "element-01"
            },
            "firstTimestamp": "2022-04-30T17:02:25Z",
            "lastTimestamp": "2022-04-30T17:02:25Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "calico-node-rtrnd.16eabb4b4ee5ee79",
                "namespace": "kube-system",
                "uid": "45be116e-c710-4f7e-b715-f009afe5d4f1",
                "resourceVersion": "561",
                "creationTimestamp": "2022-04-30T17:02:25Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "calico-node-rtrnd",
                "uid": "57f5a8f6-2c7c-4536-aba0-a972e87673db",
                "apiVersion": "v1",
                "resourceVersion": "482",
                "fieldPath": "spec.containers{calico-node}"
            },
            "reason": "Started",
            "message": "Started container calico-node",
            "source": {
                "component": "kubelet",
                "host": "element-01"
            },
            "firstTimestamp": "2022-04-30T17:02:25Z",
            "lastTimestamp": "2022-04-30T17:02:25Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "calico-node-rtrnd.16eabb4b7478b4d2",
                "namespace": "kube-system",
                "uid": "ca8d4bc4-5336-4287-8121-b5a5b8b23af3",
                "resourceVersion": "963",
                "creationTimestamp": "2022-04-30T17:02:26Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "calico-node-rtrnd",
                "uid": "57f5a8f6-2c7c-4536-aba0-a972e87673db",
                "apiVersion": "v1",
                "resourceVersion": "482",
                "fieldPath": "spec.containers{calico-node}"
            },
            "reason": "Unhealthy",
            "message": "Readiness probe failed: calico/node is not ready: BIRD is not ready: Failed to stat() nodename file: stat /var/lib/calico/nodename: no such file or directory\n",
            "source": {
                "component": "kubelet",
                "host": "element-01"
            },
            "firstTimestamp": "2022-04-30T17:02:26Z",
            "lastTimestamp": "2022-04-30T17:07:30Z",
            "count": 45,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "calico-node-rtrnd.16eabb4ee0b58d8d",
                "namespace": "kube-system",
                "uid": "a9da2039-e25e-4f9e-a480-d5fe792a9e74",
                "resourceVersion": "645",
                "creationTimestamp": "2022-04-30T17:02:40Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "calico-node-rtrnd",
                "uid": "57f5a8f6-2c7c-4536-aba0-a972e87673db",
                "apiVersion": "v1",
                "resourceVersion": "482",
                "fieldPath": "spec.containers{calico-node}"
            },
            "reason": "Unhealthy",
            "message": "Liveness probe failed: calico/node is not ready: Felix is not live: Get \"http://localhost:9099/liveness\": dial tcp 127.0.0.1:9099: connect: connection refused\n",
            "source": {
                "component": "kubelet",
                "host": "element-01"
            },
            "firstTimestamp": "2022-04-30T17:02:40Z",
            "lastTimestamp": "2022-04-30T17:03:20Z",
            "count": 5,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "calico-node.16eabb4a3188fccc",
                "namespace": "kube-system",
                "uid": "d49e449b-592c-47e8-b6c7-ff4655610acc",
                "resourceVersion": "480",
                "creationTimestamp": "2022-04-30T17:02:20Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "calico-node",
                "uid": "304f24e6-cf2f-4eda-924a-142e727e0ea8",
                "apiVersion": "apps/v1",
                "resourceVersion": "387"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: calico-node-rtrnd",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2022-04-30T17:02:20Z",
            "lastTimestamp": "2022-04-30T17:02:20Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-64897985d-96x4d.16eabb4a510b2538",
                "namespace": "kube-system",
                "uid": "dccf4897-4aa7-480a-b314-cba2e7615303",
                "resourceVersion": "1126",
                "creationTimestamp": "2022-04-30T17:02:21Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-64897985d-96x4d",
                "uid": "10b5d1a0-60ab-4e8c-a8ec-c81a892990a0",
                "apiVersion": "v1",
                "resourceVersion": "524"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had taint {node.kubernetes.io/not-ready: }, that the pod didn't tolerate.",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2022-04-30T17:02:21Z",
            "lastTimestamp": "2022-04-30T17:09:38Z",
            "count": 8,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-64897985d-rld2s.16eabb4a4f4ca0c3",
                "namespace": "kube-system",
                "uid": "f06c22fd-e5b7-4bd2-859b-59233ceff384",
                "resourceVersion": "1125",
                "creationTimestamp": "2022-04-30T17:02:21Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-64897985d-rld2s",
                "uid": "2248703d-aec4-4033-93bf-065de4d4ba58",
                "apiVersion": "v1",
                "resourceVersion": "519"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had taint {node.kubernetes.io/not-ready: }, that the pod didn't tolerate.",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2022-04-30T17:02:21Z",
            "lastTimestamp": "2022-04-30T17:09:38Z",
            "count": 8,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-64897985d.16eabb4a4da65fe7",
                "namespace": "kube-system",
                "uid": "a817414a-79fb-456e-964c-0073c0c37fd3",
                "resourceVersion": "520",
                "creationTimestamp": "2022-04-30T17:02:21Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "coredns-64897985d",
                "uid": "305a2b94-a6cd-47e6-a394-507f2171c3e4",
                "apiVersion": "apps/v1",
                "resourceVersion": "463"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: coredns-64897985d-rld2s",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2022-04-30T17:02:21Z",
            "lastTimestamp": "2022-04-30T17:02:21Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-64897985d.16eabb4a4f456bc4",
                "namespace": "kube-system",
                "uid": "2b1dbfd7-1498-4fee-88b3-b02636a6de78",
                "resourceVersion": "532",
                "creationTimestamp": "2022-04-30T17:02:21Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "coredns-64897985d",
                "uid": "305a2b94-a6cd-47e6-a394-507f2171c3e4",
                "apiVersion": "apps/v1",
                "resourceVersion": "463"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: coredns-64897985d-96x4d",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2022-04-30T17:02:21Z",
            "lastTimestamp": "2022-04-30T17:02:21Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns.16eabb4a0c72ced0",
                "namespace": "kube-system",
                "uid": "4e4c5fd4-bbb0-483e-9d31-9a46cfdb4dff",
                "resourceVersion": "465",
                "creationTimestamp": "2022-04-30T17:02:20Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "kube-system",
                "name": "coredns",
                "uid": "c5864b62-2d7f-4294-b833-35d68ef7eff2",
                "apiVersion": "apps/v1",
                "resourceVersion": "298"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled up replica set coredns-64897985d to 2",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2022-04-30T17:02:20Z",
            "lastTimestamp": "2022-04-30T17:02:20Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "etcd-element-01.16eabb4a04b97994",
                "namespace": "kube-system",
                "uid": "9fe34e9f-c65d-411c-832f-fa76c13081e6",
                "resourceVersion": "460",
                "creationTimestamp": "2022-04-30T17:02:20Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "etcd-element-01",
                "uid": "6d18c7a4-1821-4aad-847f-9f2956a3dea3",
                "apiVersion": "v1",
                "resourceVersion": "410"
            },
            "reason": "NodeNotReady",
            "message": "Node is not ready",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2022-04-30T17:02:19Z",
            "lastTimestamp": "2022-04-30T17:02:19Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-apiserver-element-01.16eabb4a08303ede",
                "namespace": "kube-system",
                "uid": "3ccbe5b5-dc36-474c-a244-a0331d528bae",
                "resourceVersion": "462",
                "creationTimestamp": "2022-04-30T17:02:20Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-apiserver-element-01",
                "uid": "a937c7eb-d5e5-422a-80af-c8bd979f65ce",
                "apiVersion": "v1",
                "resourceVersion": "398"
            },
            "reason": "NodeNotReady",
            "message": "Node is not ready",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2022-04-30T17:02:20Z",
            "lastTimestamp": "2022-04-30T17:02:20Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-controller-manager-element-01.16eabb4a082f4c4a",
                "namespace": "kube-system",
                "uid": "a46017d9-0e1a-45f4-8791-777b10f7563b",
                "resourceVersion": "461",
                "creationTimestamp": "2022-04-30T17:02:20Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-controller-manager-element-01",
                "uid": "8b336791-42e8-49df-a368-519e8fbbbf73",
                "apiVersion": "v1",
                "resourceVersion": "406"
            },
            "reason": "NodeNotReady",
            "message": "Node is not ready",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2022-04-30T17:02:20Z",
            "lastTimestamp": "2022-04-30T17:02:20Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-controller-manager.16eabb46fee512ec",
                "namespace": "kube-system",
                "uid": "53eab56b-17a8-49bf-a358-4ee3dae35630",
                "resourceVersion": "206",
                "creationTimestamp": "2022-04-30T17:02:06Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "kube-controller-manager",
                "uid": "24950f70-69f8-46e1-a36e-e89a938a5c7c",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "205"
            },
            "reason": "LeaderElection",
            "message": "element-01_db49b39f-d4c3-49b6-945f-8faf0470de88 became leader",
            "source": {
                "component": "kube-controller-manager"
            },
            "firstTimestamp": "2022-04-30T17:02:06Z",
            "lastTimestamp": "2022-04-30T17:02:06Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-f8mcg.16eabb4a3318b256",
                "namespace": "kube-system",
                "uid": "137ca54b-1f1d-46d9-940b-26981a988f4c",
                "resourceVersion": "488",
                "creationTimestamp": "2022-04-30T17:02:20Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-f8mcg",
                "uid": "66a976e9-624a-4bbc-8289-53d52fe755f2",
                "apiVersion": "v1",
                "resourceVersion": "481"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kube-proxy-f8mcg to element-01",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2022-04-30T17:02:20Z",
            "lastTimestamp": "2022-04-30T17:02:20Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-f8mcg.16eabb4a7bd795e7",
                "namespace": "kube-system",
                "uid": "9c8d2bdf-e1bd-4138-911e-63cf71cb5716",
                "resourceVersion": "539",
                "creationTimestamp": "2022-04-30T17:02:21Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-f8mcg",
                "uid": "66a976e9-624a-4bbc-8289-53d52fe755f2",
                "apiVersion": "v1",
                "resourceVersion": "486",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulled",
            "message": "Container image \"k8s.gcr.io/kube-proxy:v1.23.6\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "element-01"
            },
            "firstTimestamp": "2022-04-30T17:02:21Z",
            "lastTimestamp": "2022-04-30T17:02:21Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-f8mcg.16eabb4a86a851bf",
                "namespace": "kube-system",
                "uid": "787662fc-8d9d-4503-a511-bae22433769c",
                "resourceVersion": "540",
                "creationTimestamp": "2022-04-30T17:02:22Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-f8mcg",
                "uid": "66a976e9-624a-4bbc-8289-53d52fe755f2",
                "apiVersion": "v1",
                "resourceVersion": "486",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "element-01"
            },
            "firstTimestamp": "2022-04-30T17:02:22Z",
            "lastTimestamp": "2022-04-30T17:02:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-f8mcg.16eabb4a96f98037",
                "namespace": "kube-system",
                "uid": "93c1624a-ba9a-43e2-b392-c2860e9687d1",
                "resourceVersion": "542",
                "creationTimestamp": "2022-04-30T17:02:22Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-f8mcg",
                "uid": "66a976e9-624a-4bbc-8289-53d52fe755f2",
                "apiVersion": "v1",
                "resourceVersion": "486",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "element-01"
            },
            "firstTimestamp": "2022-04-30T17:02:22Z",
            "lastTimestamp": "2022-04-30T17:02:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy.16eabb4a324ef601",
                "namespace": "kube-system",
                "uid": "3553a1bb-abbc-4be6-af25-40b7bb0be15c",
                "resourceVersion": "484",
                "creationTimestamp": "2022-04-30T17:02:20Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kube-proxy",
                "uid": "d6ef05a6-4124-43b3-a140-e6b26e26c797",
                "apiVersion": "apps/v1",
                "resourceVersion": "318"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kube-proxy-f8mcg",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2022-04-30T17:02:20Z",
            "lastTimestamp": "2022-04-30T17:02:20Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-scheduler-element-01.16eabb4a04b8e205",
                "namespace": "kube-system",
                "uid": "51671bf1-931e-4282-ba53-e8927a060e2e",
                "resourceVersion": "459",
                "creationTimestamp": "2022-04-30T17:02:19Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-scheduler-element-01",
                "uid": "cdbf39d2-d68c-4d15-88d4-50c9500bbe49",
                "apiVersion": "v1",
                "resourceVersion": "422"
            },
            "reason": "NodeNotReady",
            "message": "Node is not ready",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2022-04-30T17:02:19Z",
            "lastTimestamp": "2022-04-30T17:02:19Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-scheduler.16eabb4758fd1e9c",
                "namespace": "kube-system",
                "uid": "40cd52ed-d99c-4d51-acf0-433e5eb697b4",
                "resourceVersion": "285",
                "creationTimestamp": "2022-04-30T17:02:08Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "kube-scheduler",
                "uid": "18ef770e-166d-4e96-a4b6-b069f5396283",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "284"
            },
            "reason": "LeaderElection",
            "message": "element-01_246ad413-49ea-4f3c-a820-489257fbd94e became leader",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2022-04-30T17:02:08Z",
            "lastTimestamp": "2022-04-30T17:02:08Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "1160"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "1160"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-dns",
                "namespace": "kube-system",
                "uid": "3d4be672-5440-4c4a-ae8a-3ca3959f086b",
                "resourceVersion": "301",
                "creationTimestamp": "2022-04-30T17:02:08Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "prometheus.io/port": "9153",
                    "prometheus.io/scrape": "true"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "dns",
                        "protocol": "UDP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "protocol": "TCP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "metrics",
                        "protocol": "TCP",
                        "port": 9153,
                        "targetPort": 9153
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "clusterIP": "10.96.0.10",
                "clusterIPs": [
                    "10.96.0.10"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "1160"
    },
    "items": [
        {
            "metadata": {
                "name": "calico-node",
                "namespace": "kube-system",
                "uid": "304f24e6-cf2f-4eda-924a-142e727e0ea8",
                "resourceVersion": "483",
                "generation": 1,
                "creationTimestamp": "2022-04-30T17:02:12Z",
                "labels": {
                    "k8s-app": "calico-node"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"k8s-app\":\"calico-node\"},\"name\":\"calico-node\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"calico-node\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"calico-node\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"DATASTORE_TYPE\",\"value\":\"kubernetes\"},{\"name\":\"WAIT_FOR_DATASTORE\",\"value\":\"true\"},{\"name\":\"NODENAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"CALICO_NETWORKING_BACKEND\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"calico_backend\",\"name\":\"calico-config\"}}},{\"name\":\"CLUSTER_TYPE\",\"value\":\"k8s,bgp\"},{\"name\":\"IP\",\"value\":\"autodetect\"},{\"name\":\"IP_AUTODETECTION_METHOD\",\"value\":\"can-reach=haproxy.cluster.local\"},{\"name\":\"CALICO_IPV4POOL_IPIP\",\"value\":\"Always\"},{\"name\":\"CALICO_IPV4POOL_VXLAN\",\"value\":\"Never\"},{\"name\":\"FELIX_IPINIPMTU\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"veth_mtu\",\"name\":\"calico-config\"}}},{\"name\":\"FELIX_VXLANMTU\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"veth_mtu\",\"name\":\"calico-config\"}}},{\"name\":\"FELIX_WIREGUARDMTU\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"veth_mtu\",\"name\":\"calico-config\"}}},{\"name\":\"CALICO_IPV4POOL_CIDR\",\"value\":\"10.12.0.0/16\"},{\"name\":\"CALICO_DISABLE_FILE_LOGGING\",\"value\":\"true\"},{\"name\":\"FELIX_DEFAULTENDPOINTTOHOSTACTION\",\"value\":\"ACCEPT\"},{\"name\":\"FELIX_IPV6SUPPORT\",\"value\":\"false\"},{\"name\":\"FELIX_HEALTHENABLED\",\"value\":\"true\"}],\"envFrom\":[{\"configMapRef\":{\"name\":\"kubernetes-services-endpoint\",\"optional\":true}}],\"image\":\"docker.io/calico/node:v3.22.2\",\"lifecycle\":{\"preStop\":{\"exec\":{\"command\":[\"/bin/calico-node\",\"-shutdown\"]}}},\"livenessProbe\":{\"exec\":{\"command\":[\"/bin/calico-node\",\"-felix-live\",\"-bird-live\"]},\"failureThreshold\":6,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"timeoutSeconds\":10},\"name\":\"calico-node\",\"readinessProbe\":{\"exec\":{\"command\":[\"/bin/calico-node\",\"-felix-ready\",\"-bird-ready\"]},\"periodSeconds\":10,\"timeoutSeconds\":10},\"resources\":{\"requests\":{\"cpu\":\"250m\"}},\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/host/etc/cni/net.d\",\"name\":\"cni-net-dir\",\"readOnly\":false},{\"mountPath\":\"/lib/modules\",\"name\":\"lib-modules\",\"readOnly\":true},{\"mountPath\":\"/run/xtables.lock\",\"name\":\"xtables-lock\",\"readOnly\":false},{\"mountPath\":\"/var/run/calico\",\"name\":\"var-run-calico\",\"readOnly\":false},{\"mountPath\":\"/var/lib/calico\",\"name\":\"var-lib-calico\",\"readOnly\":false},{\"mountPath\":\"/var/run/nodeagent\",\"name\":\"policysync\"},{\"mountPath\":\"/sys/fs/\",\"mountPropagation\":\"Bidirectional\",\"name\":\"sysfs\"},{\"mountPath\":\"/var/log/calico/cni\",\"name\":\"cni-log-dir\",\"readOnly\":true}]}],\"hostNetwork\":true,\"initContainers\":[{\"command\":[\"/opt/cni/bin/calico-ipam\",\"-upgrade\"],\"env\":[{\"name\":\"KUBERNETES_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"CALICO_NETWORKING_BACKEND\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"calico_backend\",\"name\":\"calico-config\"}}}],\"envFrom\":[{\"configMapRef\":{\"name\":\"kubernetes-services-endpoint\",\"optional\":true}}],\"image\":\"docker.io/calico/cni:v3.22.2\",\"name\":\"upgrade-ipam\",\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/var/lib/cni/networks\",\"name\":\"host-local-net-dir\"},{\"mountPath\":\"/host/opt/cni/bin\",\"name\":\"cni-bin-dir\"}]},{\"command\":[\"/opt/cni/bin/install\"],\"env\":[{\"name\":\"CNI_CONF_NAME\",\"value\":\"10-calico.conflist\"},{\"name\":\"CNI_NETWORK_CONFIG\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"cni_network_config\",\"name\":\"calico-config\"}}},{\"name\":\"KUBERNETES_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"CNI_MTU\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"veth_mtu\",\"name\":\"calico-config\"}}},{\"name\":\"SLEEP\",\"value\":\"false\"}],\"envFrom\":[{\"configMapRef\":{\"name\":\"kubernetes-services-endpoint\",\"optional\":true}}],\"image\":\"docker.io/calico/cni:v3.22.2\",\"name\":\"install-cni\",\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/host/opt/cni/bin\",\"name\":\"cni-bin-dir\"},{\"mountPath\":\"/host/etc/cni/net.d\",\"name\":\"cni-net-dir\"}]},{\"image\":\"docker.io/calico/pod2daemon-flexvol:v3.22.2\",\"name\":\"flexvol-driver\",\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/host/driver\",\"name\":\"flexvol-driver-host\"}]}],\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"calico-node\",\"terminationGracePeriodSeconds\":0,\"tolerations\":[{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"},{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/lib/modules\"},\"name\":\"lib-modules\"},{\"hostPath\":{\"path\":\"/var/run/calico\"},\"name\":\"var-run-calico\"},{\"hostPath\":{\"path\":\"/var/lib/calico\"},\"name\":\"var-lib-calico\"},{\"hostPath\":{\"path\":\"/run/xtables.lock\",\"type\":\"FileOrCreate\"},\"name\":\"xtables-lock\"},{\"hostPath\":{\"path\":\"/sys/fs/\",\"type\":\"DirectoryOrCreate\"},\"name\":\"sysfs\"},{\"hostPath\":{\"path\":\"/opt/cni/bin\"},\"name\":\"cni-bin-dir\"},{\"hostPath\":{\"path\":\"/etc/cni/net.d\"},\"name\":\"cni-net-dir\"},{\"hostPath\":{\"path\":\"/var/log/calico/cni\"},\"name\":\"cni-log-dir\"},{\"hostPath\":{\"path\":\"/var/lib/cni/networks\"},\"name\":\"host-local-net-dir\"},{\"hostPath\":{\"path\":\"/var/run/nodeagent\",\"type\":\"DirectoryOrCreate\"},\"name\":\"policysync\"},{\"hostPath\":{\"path\":\"/usr/libexec/kubernetes/kubelet-plugins/volume/exec/nodeagent~uds\",\"type\":\"DirectoryOrCreate\"},\"name\":\"flexvol-driver-host\"}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "calico-node"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "calico-node"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            },
                            {
                                "name": "var-run-calico",
                                "hostPath": {
                                    "path": "/var/run/calico",
                                    "type": ""
                                }
                            },
                            {
                                "name": "var-lib-calico",
                                "hostPath": {
                                    "path": "/var/lib/calico",
                                    "type": ""
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "sysfs",
                                "hostPath": {
                                    "path": "/sys/fs/",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "cni-bin-dir",
                                "hostPath": {
                                    "path": "/opt/cni/bin",
                                    "type": ""
                                }
                            },
                            {
                                "name": "cni-net-dir",
                                "hostPath": {
                                    "path": "/etc/cni/net.d",
                                    "type": ""
                                }
                            },
                            {
                                "name": "cni-log-dir",
                                "hostPath": {
                                    "path": "/var/log/calico/cni",
                                    "type": ""
                                }
                            },
                            {
                                "name": "host-local-net-dir",
                                "hostPath": {
                                    "path": "/var/lib/cni/networks",
                                    "type": ""
                                }
                            },
                            {
                                "name": "policysync",
                                "hostPath": {
                                    "path": "/var/run/nodeagent",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "flexvol-driver-host",
                                "hostPath": {
                                    "path": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec/nodeagent~uds",
                                    "type": "DirectoryOrCreate"
                                }
                            }
                        ],
                        "initContainers": [
                            {
                                "name": "upgrade-ipam",
                                "image": "docker.io/calico/cni:v3.22.2",
                                "command": [
                                    "/opt/cni/bin/calico-ipam",
                                    "-upgrade"
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "kubernetes-services-endpoint",
                                            "optional": true
                                        }
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "KUBERNETES_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CALICO_NETWORKING_BACKEND",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "calico-config",
                                                "key": "calico_backend"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "host-local-net-dir",
                                        "mountPath": "/var/lib/cni/networks"
                                    },
                                    {
                                        "name": "cni-bin-dir",
                                        "mountPath": "/host/opt/cni/bin"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            },
                            {
                                "name": "install-cni",
                                "image": "docker.io/calico/cni:v3.22.2",
                                "command": [
                                    "/opt/cni/bin/install"
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "kubernetes-services-endpoint",
                                            "optional": true
                                        }
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "CNI_CONF_NAME",
                                        "value": "10-calico.conflist"
                                    },
                                    {
                                        "name": "CNI_NETWORK_CONFIG",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "calico-config",
                                                "key": "cni_network_config"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KUBERNETES_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CNI_MTU",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "calico-config",
                                                "key": "veth_mtu"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SLEEP",
                                        "value": "false"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "cni-bin-dir",
                                        "mountPath": "/host/opt/cni/bin"
                                    },
                                    {
                                        "name": "cni-net-dir",
                                        "mountPath": "/host/etc/cni/net.d"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            },
                            {
                                "name": "flexvol-driver",
                                "image": "docker.io/calico/pod2daemon-flexvol:v3.22.2",
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "flexvol-driver-host",
                                        "mountPath": "/host/driver"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "calico-node",
                                "image": "docker.io/calico/node:v3.22.2",
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "kubernetes-services-endpoint",
                                            "optional": true
                                        }
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "DATASTORE_TYPE",
                                        "value": "kubernetes"
                                    },
                                    {
                                        "name": "WAIT_FOR_DATASTORE",
                                        "value": "true"
                                    },
                                    {
                                        "name": "NODENAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CALICO_NETWORKING_BACKEND",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "calico-config",
                                                "key": "calico_backend"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CLUSTER_TYPE",
                                        "value": "k8s,bgp"
                                    },
                                    {
                                        "name": "IP",
                                        "value": "autodetect"
                                    },
                                    {
                                        "name": "IP_AUTODETECTION_METHOD",
                                        "value": "can-reach=haproxy.cluster.local"
                                    },
                                    {
                                        "name": "CALICO_IPV4POOL_IPIP",
                                        "value": "Always"
                                    },
                                    {
                                        "name": "CALICO_IPV4POOL_VXLAN",
                                        "value": "Never"
                                    },
                                    {
                                        "name": "FELIX_IPINIPMTU",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "calico-config",
                                                "key": "veth_mtu"
                                            }
                                        }
                                    },
                                    {
                                        "name": "FELIX_VXLANMTU",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "calico-config",
                                                "key": "veth_mtu"
                                            }
                                        }
                                    },
                                    {
                                        "name": "FELIX_WIREGUARDMTU",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "calico-config",
                                                "key": "veth_mtu"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CALICO_IPV4POOL_CIDR",
                                        "value": "10.12.0.0/16"
                                    },
                                    {
                                        "name": "CALICO_DISABLE_FILE_LOGGING",
                                        "value": "true"
                                    },
                                    {
                                        "name": "FELIX_DEFAULTENDPOINTTOHOSTACTION",
                                        "value": "ACCEPT"
                                    },
                                    {
                                        "name": "FELIX_IPV6SUPPORT",
                                        "value": "false"
                                    },
                                    {
                                        "name": "FELIX_HEALTHENABLED",
                                        "value": "true"
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "250m"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "cni-net-dir",
                                        "mountPath": "/host/etc/cni/net.d"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "var-run-calico",
                                        "mountPath": "/var/run/calico"
                                    },
                                    {
                                        "name": "var-lib-calico",
                                        "mountPath": "/var/lib/calico"
                                    },
                                    {
                                        "name": "policysync",
                                        "mountPath": "/var/run/nodeagent"
                                    },
                                    {
                                        "name": "sysfs",
                                        "mountPath": "/sys/fs/",
                                        "mountPropagation": "Bidirectional"
                                    },
                                    {
                                        "name": "cni-log-dir",
                                        "readOnly": true,
                                        "mountPath": "/var/log/calico/cni"
                                    }
                                ],
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/calico-node",
                                            "-felix-live",
                                            "-bird-live"
                                        ]
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 6
                                },
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/calico-node",
                                            "-felix-ready",
                                            "-bird-ready"
                                        ]
                                    },
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/bin/calico-node",
                                                "-shutdown"
                                            ]
                                        }
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 0,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "calico-node",
                        "serviceAccount": "calico-node",
                        "hostNetwork": true,
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 1,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 1,
                "numberReady": 0,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1,
                "numberUnavailable": 1
            }
        },
        {
            "metadata": {
                "name": "kube-proxy",
                "namespace": "kube-system",
                "uid": "d6ef05a6-4124-43b3-a140-e6b26e26c797",
                "resourceVersion": "547",
                "generation": 1,
                "creationTimestamp": "2022-04-30T17:02:09Z",
                "labels": {
                    "k8s-app": "kube-proxy"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-proxy"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-proxy"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "kube-proxy",
                                "configMap": {
                                    "name": "kube-proxy",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kube-proxy",
                                "image": "k8s.gcr.io/kube-proxy:v1.23.6",
                                "command": [
                                    "/usr/local/bin/kube-proxy",
                                    "--config=/var/lib/kube-proxy/config.conf",
                                    "--hostname-override=$(NODE_NAME)"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "kube-proxy",
                                        "mountPath": "/var/lib/kube-proxy"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kube-proxy",
                        "serviceAccount": "kube-proxy",
                        "hostNetwork": true,
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 1,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 1,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1,
                "numberAvailable": 1
            }
        }
    ]
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "1160"
    },
    "items": [
        {
            "metadata": {
                "name": "calico-kube-controllers",
                "namespace": "kube-system",
                "uid": "faf23266-c6e6-4d57-a679-665f7a8d669b",
                "resourceVersion": "534",
                "generation": 1,
                "creationTimestamp": "2022-04-30T17:02:12Z",
                "labels": {
                    "k8s-app": "calico-kube-controllers"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"k8s-app\":\"calico-kube-controllers\"},\"name\":\"calico-kube-controllers\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"k8s-app\":\"calico-kube-controllers\"}},\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"calico-kube-controllers\"},\"name\":\"calico-kube-controllers\",\"namespace\":\"kube-system\"},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"ENABLED_CONTROLLERS\",\"value\":\"node\"},{\"name\":\"DATASTORE_TYPE\",\"value\":\"kubernetes\"}],\"image\":\"docker.io/calico/kube-controllers:v3.22.2\",\"livenessProbe\":{\"exec\":{\"command\":[\"/usr/bin/check-status\",\"-l\"]},\"failureThreshold\":6,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"timeoutSeconds\":10},\"name\":\"calico-kube-controllers\",\"readinessProbe\":{\"exec\":{\"command\":[\"/usr/bin/check-status\",\"-r\"]},\"periodSeconds\":10}}],\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"priorityClassName\":\"system-cluster-critical\",\"serviceAccountName\":\"calico-kube-controllers\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "calico-kube-controllers"
                    }
                },
                "template": {
                    "metadata": {
                        "name": "calico-kube-controllers",
                        "namespace": "kube-system",
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "calico-kube-controllers"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "calico-kube-controllers",
                                "image": "docker.io/calico/kube-controllers:v3.22.2",
                                "env": [
                                    {
                                        "name": "ENABLED_CONTROLLERS",
                                        "value": "node"
                                    },
                                    {
                                        "name": "DATASTORE_TYPE",
                                        "value": "kubernetes"
                                    }
                                ],
                                "resources": {},
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/usr/bin/check-status",
                                            "-l"
                                        ]
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 6
                                },
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/usr/bin/check-status",
                                            "-r"
                                        ]
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "calico-kube-controllers",
                        "serviceAccount": "calico-kube-controllers",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "Recreate"
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "unavailableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "False",
                        "lastUpdateTime": "2022-04-30T17:02:20Z",
                        "lastTransitionTime": "2022-04-30T17:02:20Z",
                        "reason": "MinimumReplicasUnavailable",
                        "message": "Deployment does not have minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2022-04-30T17:02:21Z",
                        "lastTransitionTime": "2022-04-30T17:02:20Z",
                        "reason": "ReplicaSetUpdated",
                        "message": "ReplicaSet \"calico-kube-controllers-7c845d499\" is progressing."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "coredns",
                "namespace": "kube-system",
                "uid": "c5864b62-2d7f-4294-b833-35d68ef7eff2",
                "resourceVersion": "537",
                "generation": 1,
                "creationTimestamp": "2022-04-30T17:02:08Z",
                "labels": {
                    "k8s-app": "kube-dns"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "k8s.gcr.io/coredns/coredns:v1.8.6",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 2,
                "updatedReplicas": 2,
                "unavailableReplicas": 2,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "False",
                        "lastUpdateTime": "2022-04-30T17:02:20Z",
                        "lastTransitionTime": "2022-04-30T17:02:20Z",
                        "reason": "MinimumReplicasUnavailable",
                        "message": "Deployment does not have minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2022-04-30T17:02:21Z",
                        "lastTransitionTime": "2022-04-30T17:02:20Z",
                        "reason": "ReplicaSetUpdated",
                        "message": "ReplicaSet \"coredns-64897985d\" is progressing."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "1160"
    },
    "items": [
        {
            "metadata": {
                "name": "calico-kube-controllers-7c845d499",
                "namespace": "kube-system",
                "uid": "7b2aa543-b583-45b8-bd53-e8ec239a8348",
                "resourceVersion": "529",
                "generation": 1,
                "creationTimestamp": "2022-04-30T17:02:20Z",
                "labels": {
                    "k8s-app": "calico-kube-controllers",
                    "pod-template-hash": "7c845d499"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "1",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "calico-kube-controllers",
                        "uid": "faf23266-c6e6-4d57-a679-665f7a8d669b",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "calico-kube-controllers",
                        "pod-template-hash": "7c845d499"
                    }
                },
                "template": {
                    "metadata": {
                        "name": "calico-kube-controllers",
                        "namespace": "kube-system",
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "calico-kube-controllers",
                            "pod-template-hash": "7c845d499"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "calico-kube-controllers",
                                "image": "docker.io/calico/kube-controllers:v3.22.2",
                                "env": [
                                    {
                                        "name": "ENABLED_CONTROLLERS",
                                        "value": "node"
                                    },
                                    {
                                        "name": "DATASTORE_TYPE",
                                        "value": "kubernetes"
                                    }
                                ],
                                "resources": {},
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/usr/bin/check-status",
                                            "-l"
                                        ]
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 6
                                },
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/usr/bin/check-status",
                                            "-r"
                                        ]
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "calico-kube-controllers",
                        "serviceAccount": "calico-kube-controllers",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "coredns-64897985d",
                "namespace": "kube-system",
                "uid": "305a2b94-a6cd-47e6-a394-507f2171c3e4",
                "resourceVersion": "536",
                "generation": 1,
                "creationTimestamp": "2022-04-30T17:02:20Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "64897985d"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns",
                        "uid": "c5864b62-2d7f-4294-b833-35d68ef7eff2",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "64897985d"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "64897985d"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "k8s.gcr.io/coredns/coredns:v1.8.6",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                }
            },
            "status": {
                "replicas": 2,
                "fullyLabeledReplicas": 2,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "1161"
    },
    "items": [
        {
            "metadata": {
                "name": "calico-kube-controllers-7c845d499-mqdj7",
                "generateName": "calico-kube-controllers-7c845d499-",
                "namespace": "kube-system",
                "uid": "a586aa43-ede2-423c-a1f6-21d2c524ae1a",
                "resourceVersion": "526",
                "creationTimestamp": "2022-04-30T17:02:21Z",
                "labels": {
                    "k8s-app": "calico-kube-controllers",
                    "pod-template-hash": "7c845d499"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "calico-kube-controllers-7c845d499",
                        "uid": "7b2aa543-b583-45b8-bd53-e8ec239a8348",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-api-access-cnqxv",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "calico-kube-controllers",
                        "image": "docker.io/calico/kube-controllers:v3.22.2",
                        "env": [
                            {
                                "name": "ENABLED_CONTROLLERS",
                                "value": "node"
                            },
                            {
                                "name": "DATASTORE_TYPE",
                                "value": "kubernetes"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-api-access-cnqxv",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/usr/bin/check-status",
                                    "-l"
                                ]
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 6
                        },
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "/usr/bin/check-status",
                                    "-r"
                                ]
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "calico-kube-controllers",
                "serviceAccount": "calico-kube-controllers",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Pending",
                "conditions": [
                    {
                        "type": "PodScheduled",
                        "status": "False",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-04-30T17:02:21Z",
                        "reason": "Unschedulable",
                        "message": "0/1 nodes are available: 1 node(s) had taint {node.kubernetes.io/not-ready: }, that the pod didn't tolerate."
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "calico-node-rtrnd",
                "generateName": "calico-node-",
                "namespace": "kube-system",
                "uid": "57f5a8f6-2c7c-4536-aba0-a972e87673db",
                "resourceVersion": "1105",
                "creationTimestamp": "2022-04-30T17:02:20Z",
                "labels": {
                    "controller-revision-hash": "566d644797",
                    "k8s-app": "calico-node",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "calico-node",
                        "uid": "304f24e6-cf2f-4eda-924a-142e727e0ea8",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "var-run-calico",
                        "hostPath": {
                            "path": "/var/run/calico",
                            "type": ""
                        }
                    },
                    {
                        "name": "var-lib-calico",
                        "hostPath": {
                            "path": "/var/lib/calico",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "sysfs",
                        "hostPath": {
                            "path": "/sys/fs/",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "cni-bin-dir",
                        "hostPath": {
                            "path": "/opt/cni/bin",
                            "type": ""
                        }
                    },
                    {
                        "name": "cni-net-dir",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "cni-log-dir",
                        "hostPath": {
                            "path": "/var/log/calico/cni",
                            "type": ""
                        }
                    },
                    {
                        "name": "host-local-net-dir",
                        "hostPath": {
                            "path": "/var/lib/cni/networks",
                            "type": ""
                        }
                    },
                    {
                        "name": "policysync",
                        "hostPath": {
                            "path": "/var/run/nodeagent",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "flexvol-driver-host",
                        "hostPath": {
                            "path": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec/nodeagent~uds",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "kube-api-access-dk7v4",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "initContainers": [
                    {
                        "name": "upgrade-ipam",
                        "image": "docker.io/calico/cni:v3.22.2",
                        "command": [
                            "/opt/cni/bin/calico-ipam",
                            "-upgrade"
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "kubernetes-services-endpoint",
                                    "optional": true
                                }
                            }
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "CALICO_NETWORKING_BACKEND",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "name": "calico-config",
                                        "key": "calico_backend"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "host-local-net-dir",
                                "mountPath": "/var/lib/cni/networks"
                            },
                            {
                                "name": "cni-bin-dir",
                                "mountPath": "/host/opt/cni/bin"
                            },
                            {
                                "name": "kube-api-access-dk7v4",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    },
                    {
                        "name": "install-cni",
                        "image": "docker.io/calico/cni:v3.22.2",
                        "command": [
                            "/opt/cni/bin/install"
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "kubernetes-services-endpoint",
                                    "optional": true
                                }
                            }
                        ],
                        "env": [
                            {
                                "name": "CNI_CONF_NAME",
                                "value": "10-calico.conflist"
                            },
                            {
                                "name": "CNI_NETWORK_CONFIG",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "name": "calico-config",
                                        "key": "cni_network_config"
                                    }
                                }
                            },
                            {
                                "name": "KUBERNETES_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "CNI_MTU",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "name": "calico-config",
                                        "key": "veth_mtu"
                                    }
                                }
                            },
                            {
                                "name": "SLEEP",
                                "value": "false"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "cni-bin-dir",
                                "mountPath": "/host/opt/cni/bin"
                            },
                            {
                                "name": "cni-net-dir",
                                "mountPath": "/host/etc/cni/net.d"
                            },
                            {
                                "name": "kube-api-access-dk7v4",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    },
                    {
                        "name": "flexvol-driver",
                        "image": "docker.io/calico/pod2daemon-flexvol:v3.22.2",
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "flexvol-driver-host",
                                "mountPath": "/host/driver"
                            },
                            {
                                "name": "kube-api-access-dk7v4",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "calico-node",
                        "image": "docker.io/calico/node:v3.22.2",
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "kubernetes-services-endpoint",
                                    "optional": true
                                }
                            }
                        ],
                        "env": [
                            {
                                "name": "DATASTORE_TYPE",
                                "value": "kubernetes"
                            },
                            {
                                "name": "WAIT_FOR_DATASTORE",
                                "value": "true"
                            },
                            {
                                "name": "NODENAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "CALICO_NETWORKING_BACKEND",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "name": "calico-config",
                                        "key": "calico_backend"
                                    }
                                }
                            },
                            {
                                "name": "CLUSTER_TYPE",
                                "value": "k8s,bgp"
                            },
                            {
                                "name": "IP",
                                "value": "autodetect"
                            },
                            {
                                "name": "IP_AUTODETECTION_METHOD",
                                "value": "can-reach=haproxy.cluster.local"
                            },
                            {
                                "name": "CALICO_IPV4POOL_IPIP",
                                "value": "Always"
                            },
                            {
                                "name": "CALICO_IPV4POOL_VXLAN",
                                "value": "Never"
                            },
                            {
                                "name": "FELIX_IPINIPMTU",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "name": "calico-config",
                                        "key": "veth_mtu"
                                    }
                                }
                            },
                            {
                                "name": "FELIX_VXLANMTU",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "name": "calico-config",
                                        "key": "veth_mtu"
                                    }
                                }
                            },
                            {
                                "name": "FELIX_WIREGUARDMTU",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "name": "calico-config",
                                        "key": "veth_mtu"
                                    }
                                }
                            },
                            {
                                "name": "CALICO_IPV4POOL_CIDR",
                                "value": "10.12.0.0/16"
                            },
                            {
                                "name": "CALICO_DISABLE_FILE_LOGGING",
                                "value": "true"
                            },
                            {
                                "name": "FELIX_DEFAULTENDPOINTTOHOSTACTION",
                                "value": "ACCEPT"
                            },
                            {
                                "name": "FELIX_IPV6SUPPORT",
                                "value": "false"
                            },
                            {
                                "name": "FELIX_HEALTHENABLED",
                                "value": "true"
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "250m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-net-dir",
                                "mountPath": "/host/etc/cni/net.d"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "var-run-calico",
                                "mountPath": "/var/run/calico"
                            },
                            {
                                "name": "var-lib-calico",
                                "mountPath": "/var/lib/calico"
                            },
                            {
                                "name": "policysync",
                                "mountPath": "/var/run/nodeagent"
                            },
                            {
                                "name": "sysfs",
                                "mountPath": "/sys/fs/",
                                "mountPropagation": "Bidirectional"
                            },
                            {
                                "name": "cni-log-dir",
                                "readOnly": true,
                                "mountPath": "/var/log/calico/cni"
                            },
                            {
                                "name": "kube-api-access-dk7v4",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/bin/calico-node",
                                    "-felix-live",
                                    "-bird-live"
                                ]
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 6
                        },
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "/bin/calico-node",
                                    "-felix-ready",
                                    "-bird-ready"
                                ]
                            },
                            "timeoutSeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "lifecycle": {
                            "preStop": {
                                "exec": {
                                    "command": [
                                        "/bin/calico-node",
                                        "-shutdown"
                                    ]
                                }
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 0,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "calico-node",
                "serviceAccount": "calico-node",
                "nodeName": "element-01",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "element-01"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-04-30T17:02:25Z"
                    },
                    {
                        "type": "Ready",
                        "status": "False",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-04-30T17:02:20Z",
                        "reason": "ContainersNotReady",
                        "message": "containers with unready status: [calico-node]"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "False",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-04-30T17:02:20Z",
                        "reason": "ContainersNotReady",
                        "message": "containers with unready status: [calico-node]"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-04-30T17:02:20Z"
                    }
                ],
                "hostIP": "10.11.11.157",
                "podIP": "10.11.11.157",
                "podIPs": [
                    {
                        "ip": "10.11.11.157"
                    }
                ],
                "startTime": "2022-04-30T17:02:20Z",
                "initContainerStatuses": [
                    {
                        "name": "upgrade-ipam",
                        "state": {
                            "terminated": {
                                "exitCode": 0,
                                "reason": "Completed",
                                "startedAt": "2022-04-30T17:02:22Z",
                                "finishedAt": "2022-04-30T17:02:22Z",
                                "containerID": "docker://4e70a9de008d795d77421d466540dcc4a25f72cba101f1f58579c1c915024fd4"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "calico/cni:v3.22.2",
                        "imageID": "docker-pullable://calico/cni@sha256:757d06fe361c0083ee12dcd7d01a5ad98d6afd84bc92566e9cbd15ab2434e855",
                        "containerID": "docker://4e70a9de008d795d77421d466540dcc4a25f72cba101f1f58579c1c915024fd4"
                    },
                    {
                        "name": "install-cni",
                        "state": {
                            "terminated": {
                                "exitCode": 0,
                                "reason": "Completed",
                                "startedAt": "2022-04-30T17:02:23Z",
                                "finishedAt": "2022-04-30T17:02:23Z",
                                "containerID": "docker://6e27c0f4bac4898fda637b364f0bc3beb6eb59485a1899cffd146129675e5a3c"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "calico/cni:v3.22.2",
                        "imageID": "docker-pullable://calico/cni@sha256:757d06fe361c0083ee12dcd7d01a5ad98d6afd84bc92566e9cbd15ab2434e855",
                        "containerID": "docker://6e27c0f4bac4898fda637b364f0bc3beb6eb59485a1899cffd146129675e5a3c"
                    },
                    {
                        "name": "flexvol-driver",
                        "state": {
                            "terminated": {
                                "exitCode": 0,
                                "reason": "Completed",
                                "startedAt": "2022-04-30T17:02:24Z",
                                "finishedAt": "2022-04-30T17:02:24Z",
                                "containerID": "docker://da6bd43d2c5f3c3b34cd1fbc9c8b9dd9b599c24e877681994b103e8ac42e85a2"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "calico/pod2daemon-flexvol:v3.22.2",
                        "imageID": "docker-pullable://calico/pod2daemon-flexvol@sha256:413c5ebad6a5796a5571796b5ba2d2114bc0a318144db3070a631dd256a96d8a",
                        "containerID": "docker://da6bd43d2c5f3c3b34cd1fbc9c8b9dd9b599c24e877681994b103e8ac42e85a2"
                    }
                ],
                "containerStatuses": [
                    {
                        "name": "calico-node",
                        "state": {
                            "waiting": {
                                "reason": "CrashLoopBackOff",
                                "message": "back-off 1m20s restarting failed container=calico-node pod=calico-node-rtrnd_kube-system(57f5a8f6-2c7c-4536-aba0-a972e87673db)"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 137,
                                "reason": "Error",
                                "startedAt": "2022-04-30T17:08:13Z",
                                "finishedAt": "2022-04-30T17:09:22Z",
                                "containerID": "docker://9b2139e66e3bd324eba108a435aaa076961ba9fbfb682f2d94a9e407292ad9ef"
                            }
                        },
                        "ready": false,
                        "restartCount": 5,
                        "image": "calico/node:v3.22.2",
                        "imageID": "docker-pullable://calico/node@sha256:41aac6d0a440746f03d03a2912d92809681d07b6ce0ca4649241a1b95ff5e513",
                        "containerID": "docker://9b2139e66e3bd324eba108a435aaa076961ba9fbfb682f2d94a9e407292ad9ef",
                        "started": false
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-64897985d-96x4d",
                "generateName": "coredns-64897985d-",
                "namespace": "kube-system",
                "uid": "10b5d1a0-60ab-4e8c-a8ec-c81a892990a0",
                "resourceVersion": "535",
                "creationTimestamp": "2022-04-30T17:02:21Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "64897985d"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-64897985d",
                        "uid": "305a2b94-a6cd-47e6-a394-507f2171c3e4",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-vsk2d",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "k8s.gcr.io/coredns/coredns:v1.8.6",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "kube-api-access-vsk2d",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Pending",
                "conditions": [
                    {
                        "type": "PodScheduled",
                        "status": "False",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-04-30T17:02:21Z",
                        "reason": "Unschedulable",
                        "message": "0/1 nodes are available: 1 node(s) had taint {node.kubernetes.io/not-ready: }, that the pod didn't tolerate."
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-64897985d-rld2s",
                "generateName": "coredns-64897985d-",
                "namespace": "kube-system",
                "uid": "2248703d-aec4-4033-93bf-065de4d4ba58",
                "resourceVersion": "531",
                "creationTimestamp": "2022-04-30T17:02:21Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "64897985d"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-64897985d",
                        "uid": "305a2b94-a6cd-47e6-a394-507f2171c3e4",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-8sz9t",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "k8s.gcr.io/coredns/coredns:v1.8.6",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "kube-api-access-8sz9t",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Pending",
                "conditions": [
                    {
                        "type": "PodScheduled",
                        "status": "False",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-04-30T17:02:21Z",
                        "reason": "Unschedulable",
                        "message": "0/1 nodes are available: 1 node(s) had taint {node.kubernetes.io/not-ready: }, that the pod didn't tolerate."
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "etcd-element-01",
                "namespace": "kube-system",
                "uid": "6d18c7a4-1821-4aad-847f-9f2956a3dea3",
                "resourceVersion": "570",
                "creationTimestamp": "2022-04-30T17:02:09Z",
                "labels": {
                    "component": "etcd",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubeadm.kubernetes.io/etcd.advertise-client-urls": "https://10.11.11.157:2379",
                    "kubernetes.io/config.hash": "3452d390f7d92b10aa8e0ddb1007b87d",
                    "kubernetes.io/config.mirror": "3452d390f7d92b10aa8e0ddb1007b87d",
                    "kubernetes.io/config.seen": "2022-04-30T17:02:08.875466768Z",
                    "kubernetes.io/config.source": "file",
                    "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "element-01",
                        "uid": "e84e5545-d2c2-4f6f-963a-56a817741180",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "etcd-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etcd-data",
                        "hostPath": {
                            "path": "/var/lib/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "etcd",
                        "image": "k8s.gcr.io/etcd:3.5.1-0",
                        "command": [
                            "etcd",
                            "--advertise-client-urls=https://10.11.11.157:2379",
                            "--cert-file=/etc/kubernetes/pki/etcd/server.crt",
                            "--client-cert-auth=true",
                            "--data-dir=/var/lib/etcd",
                            "--initial-advertise-peer-urls=https://10.11.11.157:2380",
                            "--initial-cluster=element-01=https://10.11.11.157:2380",
                            "--key-file=/etc/kubernetes/pki/etcd/server.key",
                            "--listen-client-urls=https://127.0.0.1:2379,https://10.11.11.157:2379",
                            "--listen-metrics-urls=http://127.0.0.1:2381",
                            "--listen-peer-urls=https://10.11.11.157:2380",
                            "--name=element-01",
                            "--peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt",
                            "--peer-client-cert-auth=true",
                            "--peer-key-file=/etc/kubernetes/pki/etcd/peer.key",
                            "--peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt",
                            "--snapshot-count=10000",
                            "--trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m",
                                "memory": "100Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "etcd-data",
                                "mountPath": "/var/lib/etcd"
                            },
                            {
                                "name": "etcd-certs",
                                "mountPath": "/etc/kubernetes/pki/etcd"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 2381,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 2381,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "element-01",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-04-30T17:02:09Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-04-30T17:02:18Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-04-30T17:02:18Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-04-30T17:02:09Z"
                    }
                ],
                "hostIP": "10.11.11.157",
                "podIP": "10.11.11.157",
                "podIPs": [
                    {
                        "ip": "10.11.11.157"
                    }
                ],
                "startTime": "2022-04-30T17:02:09Z",
                "containerStatuses": [
                    {
                        "name": "etcd",
                        "state": {
                            "running": {
                                "startedAt": "2022-04-30T17:02:01Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 1,
                        "image": "k8s.gcr.io/etcd:3.5.1-0",
                        "imageID": "docker-pullable://k8s.gcr.io/etcd@sha256:64b9ea357325d5db9f8a723dcf503b5a449177b17ac87d69481e126bb724c263",
                        "containerID": "docker://84bdf887bf22736bab83a9d2c96e2959db3f42bb9f84a7c2a38edd77a5175e0d",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-apiserver-element-01",
                "namespace": "kube-system",
                "uid": "a937c7eb-d5e5-422a-80af-c8bd979f65ce",
                "resourceVersion": "571",
                "creationTimestamp": "2022-04-30T17:02:09Z",
                "labels": {
                    "component": "kube-apiserver",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint": "10.11.11.157:6443",
                    "kubernetes.io/config.hash": "e5ece78adba08142dd3bc76c8e1691a3",
                    "kubernetes.io/config.mirror": "e5ece78adba08142dd3bc76c8e1691a3",
                    "kubernetes.io/config.seen": "2022-04-30T17:02:08.875476778Z",
                    "kubernetes.io/config.source": "file",
                    "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "element-01",
                        "uid": "e84e5545-d2c2-4f6f-963a-56a817741180",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-apiserver",
                        "image": "k8s.gcr.io/kube-apiserver:v1.23.6",
                        "command": [
                            "kube-apiserver",
                            "--advertise-address=10.11.11.157",
                            "--allow-privileged=true",
                            "--authorization-mode=Node,RBAC",
                            "--client-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--enable-admission-plugins=NodeRestriction",
                            "--enable-bootstrap-token-auth=true",
                            "--etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt",
                            "--etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt",
                            "--etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key",
                            "--etcd-servers=https://127.0.0.1:2379",
                            "--kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt",
                            "--kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key",
                            "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                            "--proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt",
                            "--proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key",
                            "--requestheader-allowed-names=front-proxy-client",
                            "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt",
                            "--requestheader-extra-headers-prefix=X-Remote-Extra-",
                            "--requestheader-group-headers=X-Remote-Group",
                            "--requestheader-username-headers=X-Remote-User",
                            "--secure-port=6443",
                            "--service-account-issuer=https://kubernetes.default.svc.cluster.local",
                            "--service-account-key-file=/etc/kubernetes/pki/sa.pub",
                            "--service-account-signing-key-file=/etc/kubernetes/pki/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/12",
                            "--tls-cert-file=/etc/kubernetes/pki/apiserver.crt",
                            "--tls-private-key-file=/etc/kubernetes/pki/apiserver.key"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "250m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/pki"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 6443,
                                "host": "10.11.11.157",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": 6443,
                                "host": "10.11.11.157",
                                "scheme": "HTTPS"
                            },
                            "timeoutSeconds": 15,
                            "periodSeconds": 1,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 6443,
                                "host": "10.11.11.157",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "element-01",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-04-30T17:02:09Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-04-30T17:02:11Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-04-30T17:02:11Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-04-30T17:02:09Z"
                    }
                ],
                "hostIP": "10.11.11.157",
                "podIP": "10.11.11.157",
                "podIPs": [
                    {
                        "ip": "10.11.11.157"
                    }
                ],
                "startTime": "2022-04-30T17:02:09Z",
                "containerStatuses": [
                    {
                        "name": "kube-apiserver",
                        "state": {
                            "running": {
                                "startedAt": "2022-04-30T17:02:01Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 1,
                        "image": "k8s.gcr.io/kube-apiserver:v1.23.6",
                        "imageID": "docker-pullable://k8s.gcr.io/kube-apiserver@sha256:0cd8c0bed8d89d914ee5df41e8a40112fb0a28804429c7964296abedc94da9f1",
                        "containerID": "docker://71422e0693217a2dd8634365440d22edd29dec4e7193ccae08dd2a8fe5aac11e",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-controller-manager-element-01",
                "namespace": "kube-system",
                "uid": "8b336791-42e8-49df-a368-519e8fbbbf73",
                "resourceVersion": "572",
                "creationTimestamp": "2022-04-30T17:02:09Z",
                "labels": {
                    "component": "kube-controller-manager",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "182e08226408480c644b8490d0b728b4",
                    "kubernetes.io/config.mirror": "182e08226408480c644b8490d0b728b4",
                    "kubernetes.io/config.seen": "2022-04-30T17:02:08.875477828Z",
                    "kubernetes.io/config.source": "file",
                    "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "element-01",
                        "uid": "e84e5545-d2c2-4f6f-963a-56a817741180",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "flexvolume-dir",
                        "hostPath": {
                            "path": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/controller-manager.conf",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-controller-manager",
                        "image": "k8s.gcr.io/kube-controller-manager:v1.23.6",
                        "command": [
                            "kube-controller-manager",
                            "--allocate-node-cidrs=true",
                            "--authentication-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--bind-address=127.0.0.1",
                            "--client-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--cluster-cidr=10.11.0.0/16",
                            "--cluster-name=kubernetes",
                            "--cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt",
                            "--cluster-signing-key-file=/etc/kubernetes/pki/ca.key",
                            "--controllers=*,bootstrapsigner,tokencleaner",
                            "--kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--leader-elect=true",
                            "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt",
                            "--root-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--service-account-private-key-file=/etc/kubernetes/pki/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/12",
                            "--use-service-account-credentials=true"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "200m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "flexvolume-dir",
                                "mountPath": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/pki"
                            },
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/controller-manager.conf"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10257,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10257,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "element-01",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-04-30T17:02:09Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-04-30T17:02:17Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-04-30T17:02:17Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-04-30T17:02:09Z"
                    }
                ],
                "hostIP": "10.11.11.157",
                "podIP": "10.11.11.157",
                "podIPs": [
                    {
                        "ip": "10.11.11.157"
                    }
                ],
                "startTime": "2022-04-30T17:02:09Z",
                "containerStatuses": [
                    {
                        "name": "kube-controller-manager",
                        "state": {
                            "running": {
                                "startedAt": "2022-04-30T17:02:02Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 1,
                        "image": "k8s.gcr.io/kube-controller-manager:v1.23.6",
                        "imageID": "docker-pullable://k8s.gcr.io/kube-controller-manager@sha256:df94796b78d2285ffe6b231c2b39d25034dde8814de2f75d953a827e77fe6adf",
                        "containerID": "docker://8640a618e4ea79f003ab30367aa089f6370ba592a75030a2090d606a61b17255",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-f8mcg",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "66a976e9-624a-4bbc-8289-53d52fe755f2",
                "resourceVersion": "546",
                "creationTimestamp": "2022-04-30T17:02:20Z",
                "labels": {
                    "controller-revision-hash": "549f7469d9",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "d6ef05a6-4124-43b3-a140-e6b26e26c797",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-proxy",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-hf8cw",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "k8s.gcr.io/kube-proxy:v1.23.6",
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-hf8cw",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "element-01",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "element-01"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-04-30T17:02:20Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-04-30T17:02:22Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-04-30T17:02:22Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-04-30T17:02:20Z"
                    }
                ],
                "hostIP": "10.11.11.157",
                "podIP": "10.11.11.157",
                "podIPs": [
                    {
                        "ip": "10.11.11.157"
                    }
                ],
                "startTime": "2022-04-30T17:02:20Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2022-04-30T17:02:22Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "k8s.gcr.io/kube-proxy:v1.23.6",
                        "imageID": "docker-pullable://k8s.gcr.io/kube-proxy@sha256:cc007fb495f362f18c74e6f5552060c6785ca2b802a5067251de55c7cc880741",
                        "containerID": "docker://6fa8382c21e6e6d60490ce19a25249b4ddaebfe6daeb0c3d8a2bc7e40b70fad3",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-scheduler-element-01",
                "namespace": "kube-system",
                "uid": "cdbf39d2-d68c-4d15-88d4-50c9500bbe49",
                "resourceVersion": "569",
                "creationTimestamp": "2022-04-30T17:02:09Z",
                "labels": {
                    "component": "kube-scheduler",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "627dbd786b87971d91f6f56f6133545f",
                    "kubernetes.io/config.mirror": "627dbd786b87971d91f6f56f6133545f",
                    "kubernetes.io/config.seen": "2022-04-30T17:02:08.875478548Z",
                    "kubernetes.io/config.source": "file",
                    "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "element-01",
                        "uid": "e84e5545-d2c2-4f6f-963a-56a817741180",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/scheduler.conf",
                            "type": "FileOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-scheduler",
                        "image": "k8s.gcr.io/kube-scheduler:v1.23.6",
                        "command": [
                            "kube-scheduler",
                            "--authentication-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--bind-address=127.0.0.1",
                            "--kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--leader-elect=true"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/scheduler.conf"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10259,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10259,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "element-01",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-04-30T17:02:09Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-04-30T17:02:19Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-04-30T17:02:19Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-04-30T17:02:09Z"
                    }
                ],
                "hostIP": "10.11.11.157",
                "podIP": "10.11.11.157",
                "podIPs": [
                    {
                        "ip": "10.11.11.157"
                    }
                ],
                "startTime": "2022-04-30T17:02:09Z",
                "containerStatuses": [
                    {
                        "name": "kube-scheduler",
                        "state": {
                            "running": {
                                "startedAt": "2022-04-30T17:02:01Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 1,
                        "image": "k8s.gcr.io/kube-scheduler:v1.23.6",
                        "imageID": "docker-pullable://k8s.gcr.io/kube-scheduler@sha256:02b4e994459efa49c3e2392733e269893e23d4ac46e92e94107652963caae78b",
                        "containerID": "docker://8081f2c8783cdbe50fff8e985d9d2972bdcc5000779f3703ec8a1e2297e92501",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        }
    ]
}
==== START logs for container calico-kube-controllers of pod kube-system/calico-kube-controllers-7c845d499-mqdj7 ====
==== END logs for container calico-kube-controllers of pod kube-system/calico-kube-controllers-7c845d499-mqdj7 ====
==== START logs for container upgrade-ipam of pod kube-system/calico-node-rtrnd ====
2022-04-30 17:02:22.465 [INFO][1] ipam_plugin.go 75: migrating from host-local to calico-ipam...
2022-04-30 17:02:22.466 [INFO][1] migrate.go 67: checking host-local IPAM data dir dir existence...
2022-04-30 17:02:22.466 [INFO][1] migrate.go 69: host-local IPAM data dir dir not found; no migration necessary, successfully exiting...
2022-04-30 17:02:22.466 [INFO][1] ipam_plugin.go 105: migration from host-local to calico-ipam complete node="element-01"
==== END logs for container upgrade-ipam of pod kube-system/calico-node-rtrnd ====
==== START logs for container install-cni of pod kube-system/calico-node-rtrnd ====
time="2022-04-30T17:02:23Z" level=info msg="Running as a Kubernetes pod" source="install.go:141"
time="2022-04-30T17:02:23Z" level=info msg="Installed /host/opt/cni/bin/bandwidth"
time="2022-04-30T17:02:23Z" level=info msg="Installed /host/opt/cni/bin/calico"
time="2022-04-30T17:02:23Z" level=info msg="Installed /host/opt/cni/bin/calico-ipam"
time="2022-04-30T17:02:23Z" level=info msg="Installed /host/opt/cni/bin/flannel"
time="2022-04-30T17:02:23Z" level=info msg="Installed /host/opt/cni/bin/host-local"
time="2022-04-30T17:02:23Z" level=info msg="Installed /host/opt/cni/bin/install"
time="2022-04-30T17:02:23Z" level=info msg="Installed /host/opt/cni/bin/loopback"
time="2022-04-30T17:02:23Z" level=info msg="Installed /host/opt/cni/bin/portmap"
time="2022-04-30T17:02:23Z" level=info msg="Installed /host/opt/cni/bin/tags.txt"
time="2022-04-30T17:02:23Z" level=info msg="Installed /host/opt/cni/bin/tuning"
time="2022-04-30T17:02:23Z" level=info msg="Wrote Calico CNI binaries to /host/opt/cni/bin\n"
time="2022-04-30T17:02:23Z" level=info msg="CNI plugin version: v3.22.2\n"
time="2022-04-30T17:02:23Z" level=info msg="/host/secondary-bin-dir is not writeable, skipping"
time="2022-04-30T17:02:23Z" level=info msg="Using CNI config template from CNI_NETWORK_CONFIG environment variable." source="install.go:322"
{
  "name": "k8s-pod-network",
  "cniVersion": "0.3.1",
  "plugins": [
    {
      "type": "calico",
      "log_level": "info",
      "log_file_path": "/var/log/calico/cni/cni.log",
      "datastore_type": "kubernetes",
      "nodename": "element-01",
      "mtu": 0,
      "ipam": {
          "type": "calico-ipam"
      },
      "policy": {
          "type": "k8s"
      },
      "kubernetes": {
          "kubeconfig": "/etc/cni/net.d/calico-kubeconfig"
      }
    },
    {
      "type": "portmap",
      "snat": true,
      "capabilities": {"portMappings": true}
    },
    {
      "type": "bandwidth",
      "capabilities": {"bandwidth": true}
    }
  ]
}
time="2022-04-30T17:02:23Z" level=info msg="Created /host/etc/cni/net.d/10-calico.conflist"
time="2022-04-30T17:02:23Z" level=info msg="Done configuring CNI.  Sleep= false"
==== END logs for container install-cni of pod kube-system/calico-node-rtrnd ====
==== START logs for container flexvol-driver of pod kube-system/calico-node-rtrnd ====
File exists /host/driver/uds. Copy over
==== END logs for container flexvol-driver of pod kube-system/calico-node-rtrnd ====
==== START logs for container calico-node of pod kube-system/calico-node-rtrnd ====
2022-04-30 17:08:13.380 [INFO][9] startup/startup.go 425: Early log level set to info
2022-04-30 17:08:13.380 [INFO][9] startup/utils.go 127: Using NODENAME environment for node name element-01
2022-04-30 17:08:13.380 [INFO][9] startup/utils.go 139: Determined node name: element-01
2022-04-30 17:08:13.380 [INFO][9] startup/startup.go 94: Starting node element-01 with version v3.22.2
2022-04-30 17:08:13.382 [INFO][9] startup/startup.go 430: Checking datastore connection
2022-04-30 17:08:43.382 [INFO][9] startup/startup.go 445: Hit error connecting to datastore - retry error=Get "https://10.96.0.1:443/api/v1/nodes/foo": dial tcp 10.96.0.1:443: i/o timeout
2022-04-30 17:09:14.384 [INFO][9] startup/startup.go 445: Hit error connecting to datastore - retry error=Get "https://10.96.0.1:443/api/v1/nodes/foo": dial tcp 10.96.0.1:443: i/o timeout
==== END logs for container calico-node of pod kube-system/calico-node-rtrnd ====
==== START logs for container coredns of pod kube-system/coredns-64897985d-96x4d ====
==== END logs for container coredns of pod kube-system/coredns-64897985d-96x4d ====
==== START logs for container coredns of pod kube-system/coredns-64897985d-rld2s ====
==== END logs for container coredns of pod kube-system/coredns-64897985d-rld2s ====
==== START logs for container etcd of pod kube-system/etcd-element-01 ====
{"level":"info","ts":"2022-04-30T17:02:01.626Z","caller":"etcdmain/etcd.go:72","msg":"Running: ","args":["etcd","--advertise-client-urls=https://10.11.11.157:2379","--cert-file=/etc/kubernetes/pki/etcd/server.crt","--client-cert-auth=true","--data-dir=/var/lib/etcd","--initial-advertise-peer-urls=https://10.11.11.157:2380","--initial-cluster=element-01=https://10.11.11.157:2380","--key-file=/etc/kubernetes/pki/etcd/server.key","--listen-client-urls=https://127.0.0.1:2379,https://10.11.11.157:2379","--listen-metrics-urls=http://127.0.0.1:2381","--listen-peer-urls=https://10.11.11.157:2380","--name=element-01","--peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt","--peer-client-cert-auth=true","--peer-key-file=/etc/kubernetes/pki/etcd/peer.key","--peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt","--snapshot-count=10000","--trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt"]}
{"level":"info","ts":"2022-04-30T17:02:01.626Z","caller":"embed/etcd.go:131","msg":"configuring peer listeners","listen-peer-urls":["https://10.11.11.157:2380"]}
{"level":"info","ts":"2022-04-30T17:02:01.627Z","caller":"embed/etcd.go:478","msg":"starting with peer TLS","tls-info":"cert = /etc/kubernetes/pki/etcd/peer.crt, key = /etc/kubernetes/pki/etcd/peer.key, client-cert=, client-key=, trusted-ca = /etc/kubernetes/pki/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2022-04-30T17:02:01.627Z","caller":"embed/etcd.go:139","msg":"configuring client listeners","listen-client-urls":["https://10.11.11.157:2379","https://127.0.0.1:2379"]}
{"level":"info","ts":"2022-04-30T17:02:01.627Z","caller":"embed/etcd.go:307","msg":"starting an etcd server","etcd-version":"3.5.1","git-sha":"e8732fb5f","go-version":"go1.16.3","go-os":"linux","go-arch":"amd64","max-cpu-set":32,"max-cpu-available":32,"member-initialized":false,"name":"element-01","data-dir":"/var/lib/etcd","wal-dir":"","wal-dir-dedicated":"","member-dir":"/var/lib/etcd/member","force-new-cluster":false,"heartbeat-interval":"100ms","election-timeout":"1s","initial-election-tick-advance":true,"snapshot-count":10000,"snapshot-catchup-entries":5000,"initial-advertise-peer-urls":["https://10.11.11.157:2380"],"listen-peer-urls":["https://10.11.11.157:2380"],"advertise-client-urls":["https://10.11.11.157:2379"],"listen-client-urls":["https://10.11.11.157:2379","https://127.0.0.1:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"],"cors":["*"],"host-whitelist":["*"],"initial-cluster":"element-01=https://10.11.11.157:2380","initial-cluster-state":"new","initial-cluster-token":"etcd-cluster","quota-size-bytes":2147483648,"pre-vote":true,"initial-corrupt-check":false,"corrupt-check-time-interval":"0s","auto-compaction-mode":"periodic","auto-compaction-retention":"0s","auto-compaction-interval":"0s","discovery-url":"","discovery-proxy":"","downgrade-check-interval":"5s"}
{"level":"info","ts":"2022-04-30T17:02:01.651Z","caller":"etcdserver/backend.go:81","msg":"opened backend db","path":"/var/lib/etcd/member/snap/db","took":"24.207441ms"}
{"level":"info","ts":"2022-04-30T17:02:01.704Z","caller":"etcdserver/raft.go:448","msg":"starting local member","local-member-id":"bb92ecd53fe76e2b","cluster-id":"d6b04c54e8633319"}
{"level":"info","ts":"2022-04-30T17:02:01.704Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"bb92ecd53fe76e2b switched to configuration voters=()"}
{"level":"info","ts":"2022-04-30T17:02:01.704Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"bb92ecd53fe76e2b became follower at term 0"}
{"level":"info","ts":"2022-04-30T17:02:01.704Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"newRaft bb92ecd53fe76e2b [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0]"}
{"level":"info","ts":"2022-04-30T17:02:01.704Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"bb92ecd53fe76e2b became follower at term 1"}
{"level":"info","ts":"2022-04-30T17:02:01.704Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"bb92ecd53fe76e2b switched to configuration voters=(13516125832336600619)"}
{"level":"warn","ts":"2022-04-30T17:02:01.759Z","caller":"auth/store.go:1220","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2022-04-30T17:02:01.813Z","caller":"mvcc/kvstore.go:415","msg":"kvstore restored","current-rev":1}
{"level":"info","ts":"2022-04-30T17:02:01.871Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2022-04-30T17:02:01.927Z","caller":"etcdserver/server.go:843","msg":"starting etcd server","local-member-id":"bb92ecd53fe76e2b","local-server-version":"3.5.1","cluster-version":"to_be_decided"}
{"level":"info","ts":"2022-04-30T17:02:01.927Z","caller":"etcdserver/server.go:728","msg":"started as single-node; fast-forwarding election ticks","local-member-id":"bb92ecd53fe76e2b","forward-ticks":9,"forward-duration":"900ms","election-ticks":10,"election-timeout":"1s"}
{"level":"info","ts":"2022-04-30T17:02:01.928Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"bb92ecd53fe76e2b switched to configuration voters=(13516125832336600619)"}
{"level":"info","ts":"2022-04-30T17:02:01.928Z","caller":"membership/cluster.go:421","msg":"added member","cluster-id":"d6b04c54e8633319","local-member-id":"bb92ecd53fe76e2b","added-peer-id":"bb92ecd53fe76e2b","added-peer-peer-urls":["https://10.11.11.157:2380"]}
{"level":"info","ts":"2022-04-30T17:02:01.930Z","caller":"embed/etcd.go:687","msg":"starting with client TLS","tls-info":"cert = /etc/kubernetes/pki/etcd/server.crt, key = /etc/kubernetes/pki/etcd/server.key, client-cert=, client-key=, trusted-ca = /etc/kubernetes/pki/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2022-04-30T17:02:01.930Z","caller":"embed/etcd.go:580","msg":"serving peer traffic","address":"10.11.11.157:2380"}
{"level":"info","ts":"2022-04-30T17:02:01.930Z","caller":"embed/etcd.go:552","msg":"cmux::serve","address":"10.11.11.157:2380"}
{"level":"info","ts":"2022-04-30T17:02:01.930Z","caller":"embed/etcd.go:276","msg":"now serving peer/client/metrics","local-member-id":"bb92ecd53fe76e2b","initial-advertise-peer-urls":["https://10.11.11.157:2380"],"listen-peer-urls":["https://10.11.11.157:2380"],"advertise-client-urls":["https://10.11.11.157:2379"],"listen-client-urls":["https://10.11.11.157:2379","https://127.0.0.1:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2022-04-30T17:02:01.930Z","caller":"embed/etcd.go:762","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2022-04-30T17:02:02.505Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"bb92ecd53fe76e2b is starting a new election at term 1"}
{"level":"info","ts":"2022-04-30T17:02:02.505Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"bb92ecd53fe76e2b became pre-candidate at term 1"}
{"level":"info","ts":"2022-04-30T17:02:02.505Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"bb92ecd53fe76e2b received MsgPreVoteResp from bb92ecd53fe76e2b at term 1"}
{"level":"info","ts":"2022-04-30T17:02:02.505Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"bb92ecd53fe76e2b became candidate at term 2"}
{"level":"info","ts":"2022-04-30T17:02:02.505Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"bb92ecd53fe76e2b received MsgVoteResp from bb92ecd53fe76e2b at term 2"}
{"level":"info","ts":"2022-04-30T17:02:02.505Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"bb92ecd53fe76e2b became leader at term 2"}
{"level":"info","ts":"2022-04-30T17:02:02.505Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: bb92ecd53fe76e2b elected leader bb92ecd53fe76e2b at term 2"}
{"level":"info","ts":"2022-04-30T17:02:02.506Z","caller":"etcdserver/server.go:2027","msg":"published local member to cluster through raft","local-member-id":"bb92ecd53fe76e2b","local-member-attributes":"{Name:element-01 ClientURLs:[https://10.11.11.157:2379]}","request-path":"/0/members/bb92ecd53fe76e2b/attributes","cluster-id":"d6b04c54e8633319","publish-timeout":"7s"}
{"level":"info","ts":"2022-04-30T17:02:02.506Z","caller":"etcdserver/server.go:2476","msg":"setting up initial cluster version using v2 API","cluster-version":"3.5"}
{"level":"info","ts":"2022-04-30T17:02:02.506Z","caller":"embed/serve.go:98","msg":"ready to serve client requests"}
{"level":"info","ts":"2022-04-30T17:02:02.506Z","caller":"embed/serve.go:98","msg":"ready to serve client requests"}
{"level":"info","ts":"2022-04-30T17:02:02.506Z","caller":"etcdmain/main.go:47","msg":"notifying init daemon"}
{"level":"info","ts":"2022-04-30T17:02:02.506Z","caller":"etcdmain/main.go:53","msg":"successfully notified init daemon"}
{"level":"info","ts":"2022-04-30T17:02:02.506Z","caller":"embed/serve.go:188","msg":"serving client traffic securely","address":"10.11.11.157:2379"}
{"level":"info","ts":"2022-04-30T17:02:02.507Z","caller":"embed/serve.go:188","msg":"serving client traffic securely","address":"127.0.0.1:2379"}
{"level":"info","ts":"2022-04-30T17:02:02.534Z","caller":"membership/cluster.go:584","msg":"set initial cluster version","cluster-id":"d6b04c54e8633319","local-member-id":"bb92ecd53fe76e2b","cluster-version":"3.5"}
{"level":"info","ts":"2022-04-30T17:02:02.534Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2022-04-30T17:02:02.534Z","caller":"etcdserver/server.go:2500","msg":"cluster version is updated","cluster-version":"3.5"}
==== END logs for container etcd of pod kube-system/etcd-element-01 ====
==== START logs for container kube-apiserver of pod kube-system/kube-apiserver-element-01 ====
I0430 17:02:01.659931       1 server.go:565] external host was not specified, using 10.11.11.157
I0430 17:02:01.660202       1 server.go:172] Version: v1.23.6
I0430 17:02:01.790218       1 shared_informer.go:240] Waiting for caches to sync for node_authorizer
I0430 17:02:01.790707       1 plugins.go:158] Loaded 12 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,StorageObjectInUseProtection,RuntimeClass,DefaultIngressClass,MutatingAdmissionWebhook.
I0430 17:02:01.790715       1 plugins.go:161] Loaded 11 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,PodSecurity,Priority,PersistentVolumeClaimResize,RuntimeClass,CertificateApproval,CertificateSigning,CertificateSubjectRestriction,ValidatingAdmissionWebhook,ResourceQuota.
I0430 17:02:01.791156       1 plugins.go:158] Loaded 12 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,StorageObjectInUseProtection,RuntimeClass,DefaultIngressClass,MutatingAdmissionWebhook.
I0430 17:02:01.791165       1 plugins.go:161] Loaded 11 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,PodSecurity,Priority,PersistentVolumeClaimResize,RuntimeClass,CertificateApproval,CertificateSigning,CertificateSubjectRestriction,ValidatingAdmissionWebhook,ResourceQuota.
W0430 17:02:02.540416       1 genericapiserver.go:538] Skipping API apiextensions.k8s.io/v1beta1 because it has no resources.
I0430 17:02:02.541093       1 instance.go:274] Using reconciler: lease
W0430 17:02:03.102195       1 genericapiserver.go:538] Skipping API authentication.k8s.io/v1beta1 because it has no resources.
W0430 17:02:03.103151       1 genericapiserver.go:538] Skipping API authorization.k8s.io/v1beta1 because it has no resources.
W0430 17:02:03.110766       1 genericapiserver.go:538] Skipping API certificates.k8s.io/v1beta1 because it has no resources.
W0430 17:02:03.111801       1 genericapiserver.go:538] Skipping API coordination.k8s.io/v1beta1 because it has no resources.
W0430 17:02:03.115314       1 genericapiserver.go:538] Skipping API networking.k8s.io/v1beta1 because it has no resources.
W0430 17:02:03.117208       1 genericapiserver.go:538] Skipping API node.k8s.io/v1alpha1 because it has no resources.
W0430 17:02:03.121237       1 genericapiserver.go:538] Skipping API rbac.authorization.k8s.io/v1beta1 because it has no resources.
W0430 17:02:03.121246       1 genericapiserver.go:538] Skipping API rbac.authorization.k8s.io/v1alpha1 because it has no resources.
W0430 17:02:03.122210       1 genericapiserver.go:538] Skipping API scheduling.k8s.io/v1beta1 because it has no resources.
W0430 17:02:03.122219       1 genericapiserver.go:538] Skipping API scheduling.k8s.io/v1alpha1 because it has no resources.
W0430 17:02:03.124784       1 genericapiserver.go:538] Skipping API storage.k8s.io/v1alpha1 because it has no resources.
W0430 17:02:03.127437       1 genericapiserver.go:538] Skipping API flowcontrol.apiserver.k8s.io/v1alpha1 because it has no resources.
W0430 17:02:03.130157       1 genericapiserver.go:538] Skipping API apps/v1beta2 because it has no resources.
W0430 17:02:03.130167       1 genericapiserver.go:538] Skipping API apps/v1beta1 because it has no resources.
W0430 17:02:03.131405       1 genericapiserver.go:538] Skipping API admissionregistration.k8s.io/v1beta1 because it has no resources.
I0430 17:02:03.133817       1 plugins.go:158] Loaded 12 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,StorageObjectInUseProtection,RuntimeClass,DefaultIngressClass,MutatingAdmissionWebhook.
I0430 17:02:03.133826       1 plugins.go:161] Loaded 11 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,PodSecurity,Priority,PersistentVolumeClaimResize,RuntimeClass,CertificateApproval,CertificateSigning,CertificateSubjectRestriction,ValidatingAdmissionWebhook,ResourceQuota.
W0430 17:02:03.160163       1 genericapiserver.go:538] Skipping API apiregistration.k8s.io/v1beta1 because it has no resources.
I0430 17:02:03.799975       1 dynamic_cafile_content.go:156] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I0430 17:02:03.800058       1 dynamic_serving_content.go:131] "Starting controller" name="serving-cert::/etc/kubernetes/pki/apiserver.crt::/etc/kubernetes/pki/apiserver.key"
I0430 17:02:03.800082       1 dynamic_cafile_content.go:156] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
I0430 17:02:03.800098       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I0430 17:02:03.800087       1 secure_serving.go:266] Serving securely on [::]:6443
I0430 17:02:03.800227       1 autoregister_controller.go:141] Starting autoregister controller
I0430 17:02:03.800238       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0430 17:02:03.800269       1 available_controller.go:491] Starting AvailableConditionController
I0430 17:02:03.800276       1 cache.go:32] Waiting for caches to sync for AvailableConditionController controller
I0430 17:02:03.800297       1 crdregistration_controller.go:111] Starting crd-autoregister controller
I0430 17:02:03.800304       1 shared_informer.go:240] Waiting for caches to sync for crd-autoregister
I0430 17:02:03.800338       1 customresource_discovery_controller.go:209] Starting DiscoveryController
I0430 17:02:03.800360       1 controller.go:85] Starting OpenAPI controller
I0430 17:02:03.800372       1 naming_controller.go:291] Starting NamingConditionController
I0430 17:02:03.800381       1 establishing_controller.go:76] Starting EstablishingController
I0430 17:02:03.800393       1 nonstructuralschema_controller.go:192] Starting NonStructuralSchemaConditionController
I0430 17:02:03.800404       1 apiapproval_controller.go:186] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0430 17:02:03.800413       1 crd_finalizer.go:266] Starting CRDFinalizer
I0430 17:02:03.800517       1 dynamic_serving_content.go:131] "Starting controller" name="aggregator-proxy-cert::/etc/kubernetes/pki/front-proxy-client.crt::/etc/kubernetes/pki/front-proxy-client.key"
I0430 17:02:03.800525       1 apf_controller.go:317] Starting API Priority and Fairness config controller
I0430 17:02:03.800753       1 controller.go:83] Starting OpenAPI AggregationController
I0430 17:02:03.800888       1 apiservice_controller.go:97] Starting APIServiceRegistrationController
I0430 17:02:03.800896       1 cache.go:32] Waiting for caches to sync for APIServiceRegistrationController controller
I0430 17:02:03.823930       1 cluster_authentication_trust_controller.go:440] Starting cluster_authentication_trust_controller controller
I0430 17:02:03.823943       1 shared_informer.go:240] Waiting for caches to sync for cluster_authentication_trust_controller
I0430 17:02:03.823965       1 dynamic_cafile_content.go:156] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
I0430 17:02:03.824079       1 dynamic_cafile_content.go:156] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I0430 17:02:03.891283       1 shared_informer.go:247] Caches are synced for node_authorizer 
I0430 17:02:03.894086       1 controller.go:611] quota admission added evaluator for: namespaces
I0430 17:02:03.900752       1 apf_controller.go:322] Running API Priority and Fairness config worker
I0430 17:02:03.900775       1 shared_informer.go:247] Caches are synced for crd-autoregister 
I0430 17:02:03.900795       1 cache.go:39] Caches are synced for autoregister controller
I0430 17:02:03.900817       1 cache.go:39] Caches are synced for AvailableConditionController controller
I0430 17:02:03.900926       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I0430 17:02:03.924681       1 shared_informer.go:247] Caches are synced for cluster_authentication_trust_controller 
I0430 17:02:04.800544       1 controller.go:132] OpenAPI AggregationController: action for item : Nothing (removed from the queue).
I0430 17:02:04.800564       1 controller.go:132] OpenAPI AggregationController: action for item k8s_internal_local_delegation_chain_0000000000: Nothing (removed from the queue).
I0430 17:02:04.802778       1 storage_scheduling.go:93] created PriorityClass system-node-critical with value 2000001000
I0430 17:02:04.826175       1 storage_scheduling.go:93] created PriorityClass system-cluster-critical with value 2000000000
I0430 17:02:04.826182       1 storage_scheduling.go:109] all system priority classes are created successfully or already exist.
I0430 17:02:06.727061       1 controller.go:611] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I0430 17:02:06.856600       1 controller.go:611] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I0430 17:02:06.969729       1 controller.go:611] quota admission added evaluator for: leases.coordination.k8s.io
I0430 17:02:07.113425       1 alloc.go:329] "allocated clusterIPs" service="default/kubernetes" clusterIPs=map[IPv4:10.96.0.1]
I0430 17:02:07.140238       1 controller.go:611] quota admission added evaluator for: serviceaccounts
W0430 17:02:07.190724       1 lease.go:233] Resetting endpoints for master service "kubernetes" to [10.11.11.157]
I0430 17:02:07.191332       1 controller.go:611] quota admission added evaluator for: endpoints
I0430 17:02:07.205244       1 controller.go:611] quota admission added evaluator for: endpointslices.discovery.k8s.io
I0430 17:02:08.790441       1 controller.go:611] quota admission added evaluator for: deployments.apps
I0430 17:02:08.839973       1 alloc.go:329] "allocated clusterIPs" service="kube-system/kube-dns" clusterIPs=map[IPv4:10.96.0.10]
I0430 17:02:09.038399       1 controller.go:611] quota admission added evaluator for: daemonsets.apps
I0430 17:02:12.551994       1 controller.go:611] quota admission added evaluator for: poddisruptionbudgets.policy
I0430 17:02:20.094111       1 controller.go:611] quota admission added evaluator for: replicasets.apps
I0430 17:02:20.696592       1 controller.go:611] quota admission added evaluator for: controllerrevisions.apps
==== END logs for container kube-apiserver of pod kube-system/kube-apiserver-element-01 ====
==== START logs for container kube-controller-manager of pod kube-system/kube-controller-manager-element-01 ====
I0430 17:02:02.174782       1 serving.go:348] Generated self-signed cert in-memory
I0430 17:02:02.354445       1 controllermanager.go:196] Version: v1.23.6
I0430 17:02:02.355148       1 dynamic_cafile_content.go:156] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I0430 17:02:02.355151       1 dynamic_cafile_content.go:156] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
I0430 17:02:02.355235       1 secure_serving.go:200] Serving securely on 127.0.0.1:10257
I0430 17:02:02.355329       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I0430 17:02:02.355395       1 leaderelection.go:248] attempting to acquire leader lease kube-system/kube-controller-manager...
E0430 17:02:03.805858       1 leaderelection.go:330] error retrieving resource lock kube-system/kube-controller-manager: leases.coordination.k8s.io "kube-controller-manager" is forbidden: User "system:kube-controller-manager" cannot get resource "leases" in API group "coordination.k8s.io" in the namespace "kube-system"
I0430 17:02:06.983250       1 leaderelection.go:258] successfully acquired lease kube-system/kube-controller-manager
I0430 17:02:06.983326       1 event.go:294] "Event occurred" object="kube-system/kube-controller-manager" kind="Lease" apiVersion="coordination.k8s.io/v1" type="Normal" reason="LeaderElection" message="element-01_db49b39f-d4c3-49b6-945f-8faf0470de88 became leader"
I0430 17:02:07.109991       1 shared_informer.go:240] Waiting for caches to sync for tokens
I0430 17:02:07.191042       1 controllermanager.go:605] Started "disruption"
I0430 17:02:07.191126       1 disruption.go:363] Starting disruption controller
I0430 17:02:07.191140       1 shared_informer.go:240] Waiting for caches to sync for disruption
I0430 17:02:07.205980       1 controllermanager.go:605] Started "persistentvolume-expander"
I0430 17:02:07.206025       1 expand_controller.go:342] Starting expand controller
I0430 17:02:07.206041       1 shared_informer.go:240] Waiting for caches to sync for expand
I0430 17:02:07.210939       1 shared_informer.go:247] Caches are synced for tokens 
I0430 17:02:07.232296       1 controllermanager.go:605] Started "root-ca-cert-publisher"
I0430 17:02:07.232377       1 publisher.go:107] Starting root CA certificate configmap publisher
I0430 17:02:07.232386       1 shared_informer.go:240] Waiting for caches to sync for crt configmap
I0430 17:02:07.286203       1 controllermanager.go:605] Started "endpoint"
I0430 17:02:07.286287       1 endpoints_controller.go:193] Starting endpoint controller
I0430 17:02:07.286302       1 shared_informer.go:240] Waiting for caches to sync for endpoint
I0430 17:02:07.326871       1 controllermanager.go:605] Started "endpointslice"
I0430 17:02:07.326966       1 endpointslice_controller.go:257] Starting endpoint slice controller
I0430 17:02:07.326979       1 shared_informer.go:240] Waiting for caches to sync for endpoint_slice
I0430 17:02:07.377913       1 controllermanager.go:605] Started "ttl"
I0430 17:02:07.378052       1 ttl_controller.go:121] Starting TTL controller
I0430 17:02:07.378067       1 shared_informer.go:240] Waiting for caches to sync for TTL
I0430 17:02:07.469537       1 garbagecollector.go:146] Starting garbage collector controller
I0430 17:02:07.469556       1 shared_informer.go:240] Waiting for caches to sync for garbage collector
I0430 17:02:07.469586       1 graph_builder.go:289] GraphBuilder running
I0430 17:02:07.469607       1 controllermanager.go:605] Started "garbagecollector"
I0430 17:02:07.474495       1 controllermanager.go:605] Started "replicaset"
I0430 17:02:07.474515       1 replica_set.go:186] Starting replicaset controller
I0430 17:02:07.474526       1 shared_informer.go:240] Waiting for caches to sync for ReplicaSet
I0430 17:02:07.488695       1 controllermanager.go:605] Started "pvc-protection"
I0430 17:02:07.488712       1 pvc_protection_controller.go:103] "Starting PVC protection controller"
I0430 17:02:07.488719       1 shared_informer.go:240] Waiting for caches to sync for PVC protection
I0430 17:02:07.546375       1 controllermanager.go:605] Started "daemonset"
I0430 17:02:07.546436       1 daemon_controller.go:284] Starting daemon sets controller
I0430 17:02:07.546448       1 shared_informer.go:240] Waiting for caches to sync for daemon sets
I0430 17:02:07.561712       1 controllermanager.go:605] Started "csrcleaner"
I0430 17:02:07.561736       1 cleaner.go:82] Starting CSR cleaner controller
I0430 17:02:07.665186       1 controllermanager.go:605] Started "clusterrole-aggregation"
I0430 17:02:07.665223       1 clusterroleaggregation_controller.go:194] Starting ClusterRoleAggregator
I0430 17:02:07.665229       1 shared_informer.go:240] Waiting for caches to sync for ClusterRoleAggregator
I0430 17:02:07.969439       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for poddisruptionbudgets.policy
I0430 17:02:07.969521       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for endpoints
I0430 17:02:07.969544       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for horizontalpodautoscalers.autoscaling
I0430 17:02:07.969569       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for networkpolicies.networking.k8s.io
I0430 17:02:07.969585       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for endpointslices.discovery.k8s.io
W0430 17:02:07.969605       1 shared_informer.go:504] resyncPeriod 13h20m18.007495176s is smaller than resyncCheckPeriod 22h13m41.178071755s and the informer has already started. Changing it to 22h13m41.178071755s
I0430 17:02:07.969713       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for serviceaccounts
I0430 17:02:07.969756       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for ingresses.networking.k8s.io
I0430 17:02:07.969770       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for deployments.apps
I0430 17:02:07.969783       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for replicasets.apps
I0430 17:02:07.969797       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for leases.coordination.k8s.io
I0430 17:02:07.969809       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for cronjobs.batch
I0430 17:02:07.969827       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for rolebindings.rbac.authorization.k8s.io
I0430 17:02:07.969841       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for csistoragecapacities.storage.k8s.io
I0430 17:02:07.969856       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for podtemplates
I0430 17:02:07.969872       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for events.events.k8s.io
I0430 17:02:07.969885       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for jobs.batch
I0430 17:02:07.969893       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for controllerrevisions.apps
I0430 17:02:07.969902       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for roles.rbac.authorization.k8s.io
I0430 17:02:07.969923       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for limitranges
I0430 17:02:07.969937       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for daemonsets.apps
I0430 17:02:07.969947       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for statefulsets.apps
I0430 17:02:07.969974       1 controllermanager.go:605] Started "resourcequota"
I0430 17:02:07.970018       1 resource_quota_controller.go:273] Starting resource quota controller
I0430 17:02:07.970036       1 shared_informer.go:240] Waiting for caches to sync for resource quota
I0430 17:02:07.970061       1 resource_quota_monitor.go:308] QuotaMonitor running
I0430 17:02:08.112655       1 controllermanager.go:605] Started "statefulset"
I0430 17:02:08.112686       1 stateful_set.go:147] Starting stateful set controller
I0430 17:02:08.112694       1 shared_informer.go:240] Waiting for caches to sync for stateful set
I0430 17:02:08.261860       1 node_lifecycle_controller.go:377] Sending events to api server.
I0430 17:02:08.261990       1 taint_manager.go:163] "Sending events to api server"
I0430 17:02:08.262053       1 node_lifecycle_controller.go:505] Controller will reconcile labels.
I0430 17:02:08.262076       1 controllermanager.go:605] Started "nodelifecycle"
I0430 17:02:08.262106       1 node_lifecycle_controller.go:539] Starting node controller
I0430 17:02:08.262114       1 shared_informer.go:240] Waiting for caches to sync for taint
I0430 17:02:08.417746       1 controllermanager.go:605] Started "ephemeral-volume"
I0430 17:02:08.417804       1 controller.go:170] Starting ephemeral volume controller
I0430 17:02:08.417899       1 shared_informer.go:240] Waiting for caches to sync for ephemeral
I0430 17:02:08.562579       1 controllermanager.go:605] Started "cronjob"
I0430 17:02:08.562683       1 cronjob_controllerv2.go:132] "Starting cronjob controller v2"
I0430 17:02:08.562693       1 shared_informer.go:240] Waiting for caches to sync for cronjob
I0430 17:02:08.722659       1 controllermanager.go:605] Started "tokencleaner"
I0430 17:02:08.722687       1 tokencleaner.go:118] Starting token cleaner controller
I0430 17:02:08.722691       1 shared_informer.go:240] Waiting for caches to sync for token_cleaner
I0430 17:02:08.722696       1 shared_informer.go:247] Caches are synced for token_cleaner 
I0430 17:02:08.866618       1 controllermanager.go:605] Started "bootstrapsigner"
I0430 17:02:08.866664       1 shared_informer.go:240] Waiting for caches to sync for bootstrap_signer
I0430 17:02:08.938044       1 node_ipam_controller.go:91] Sending events to api server.
I0430 17:02:18.948230       1 range_allocator.go:83] Sending events to api server.
I0430 17:02:18.948366       1 range_allocator.go:117] No Secondary Service CIDR provided. Skipping filtering out secondary service addresses.
I0430 17:02:18.948401       1 controllermanager.go:605] Started "nodeipam"
I0430 17:02:18.948431       1 node_ipam_controller.go:154] Starting ipam controller
I0430 17:02:18.948449       1 shared_informer.go:240] Waiting for caches to sync for node
I0430 17:02:18.952504       1 controllermanager.go:605] Started "job"
I0430 17:02:18.952593       1 job_controller.go:184] Starting job controller
I0430 17:02:18.952609       1 shared_informer.go:240] Waiting for caches to sync for job
I0430 17:02:19.019850       1 controllermanager.go:605] Started "deployment"
I0430 17:02:19.019873       1 deployment_controller.go:153] "Starting controller" controller="deployment"
I0430 17:02:19.019884       1 shared_informer.go:240] Waiting for caches to sync for deployment
I0430 17:02:19.125295       1 controllermanager.go:605] Started "horizontalpodautoscaling"
W0430 17:02:19.125309       1 core.go:226] configure-cloud-routes is set, but no cloud provider specified. Will not configure cloud provider routes.
W0430 17:02:19.125314       1 controllermanager.go:583] Skipping "route"
I0430 17:02:19.125394       1 horizontal.go:168] Starting HPA controller
I0430 17:02:19.125428       1 shared_informer.go:240] Waiting for caches to sync for HPA
I0430 17:02:19.129302       1 controllermanager.go:605] Started "pv-protection"
I0430 17:02:19.129373       1 pv_protection_controller.go:79] Starting PV protection controller
I0430 17:02:19.129386       1 shared_informer.go:240] Waiting for caches to sync for PV protection
I0430 17:02:19.143987       1 controllermanager.go:605] Started "podgc"
I0430 17:02:19.144012       1 gc_controller.go:89] Starting GC controller
I0430 17:02:19.144073       1 shared_informer.go:240] Waiting for caches to sync for GC
I0430 17:02:19.242001       1 controllermanager.go:605] Started "namespace"
I0430 17:02:19.242070       1 namespace_controller.go:200] Starting namespace controller
I0430 17:02:19.242081       1 shared_informer.go:240] Waiting for caches to sync for namespace
I0430 17:02:19.265911       1 controllermanager.go:605] Started "serviceaccount"
I0430 17:02:19.265978       1 serviceaccounts_controller.go:117] Starting service account controller
I0430 17:02:19.265986       1 shared_informer.go:240] Waiting for caches to sync for service account
I0430 17:02:19.279595       1 certificate_controller.go:118] Starting certificate controller "csrsigning-kubelet-serving"
I0430 17:02:19.279609       1 shared_informer.go:240] Waiting for caches to sync for certificate-csrsigning-kubelet-serving
I0430 17:02:19.279616       1 dynamic_serving_content.go:131] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I0430 17:02:19.279917       1 certificate_controller.go:118] Starting certificate controller "csrsigning-kubelet-client"
I0430 17:02:19.279926       1 shared_informer.go:240] Waiting for caches to sync for certificate-csrsigning-kubelet-client
I0430 17:02:19.279936       1 dynamic_serving_content.go:131] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I0430 17:02:19.280255       1 certificate_controller.go:118] Starting certificate controller "csrsigning-kube-apiserver-client"
I0430 17:02:19.280269       1 shared_informer.go:240] Waiting for caches to sync for certificate-csrsigning-kube-apiserver-client
I0430 17:02:19.280281       1 dynamic_serving_content.go:131] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I0430 17:02:19.280503       1 controllermanager.go:605] Started "csrsigning"
I0430 17:02:19.280612       1 certificate_controller.go:118] Starting certificate controller "csrsigning-legacy-unknown"
I0430 17:02:19.280621       1 shared_informer.go:240] Waiting for caches to sync for certificate-csrsigning-legacy-unknown
I0430 17:02:19.280642       1 dynamic_serving_content.go:131] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I0430 17:02:19.282720       1 controllermanager.go:605] Started "csrapproving"
I0430 17:02:19.282858       1 certificate_controller.go:118] Starting certificate controller "csrapproving"
I0430 17:02:19.282879       1 shared_informer.go:240] Waiting for caches to sync for certificate-csrapproving
E0430 17:02:19.347811       1 core.go:92] Failed to start service controller: WARNING: no cloud provider provided, services of type LoadBalancer will fail
W0430 17:02:19.347822       1 controllermanager.go:583] Skipping "service"
I0430 17:02:19.349049       1 node_lifecycle_controller.go:77] Sending events to api server
E0430 17:02:19.349077       1 core.go:212] failed to start cloud node lifecycle controller: no cloud provider provided
W0430 17:02:19.349084       1 controllermanager.go:583] Skipping "cloud-node-lifecycle"
I0430 17:02:19.366787       1 controllermanager.go:605] Started "persistentvolume-binder"
I0430 17:02:19.366867       1 pv_controller_base.go:310] Starting persistent volume controller
I0430 17:02:19.366880       1 shared_informer.go:240] Waiting for caches to sync for persistent volume
I0430 17:02:19.440796       1 controllermanager.go:605] Started "endpointslicemirroring"
I0430 17:02:19.440842       1 endpointslicemirroring_controller.go:212] Starting EndpointSliceMirroring controller
I0430 17:02:19.440848       1 shared_informer.go:240] Waiting for caches to sync for endpoint_slice_mirroring
I0430 17:02:19.619922       1 controllermanager.go:605] Started "replicationcontroller"
I0430 17:02:19.619966       1 replica_set.go:186] Starting replicationcontroller controller
I0430 17:02:19.619972       1 shared_informer.go:240] Waiting for caches to sync for ReplicationController
I0430 17:02:19.747301       1 controllermanager.go:605] Started "attachdetach"
I0430 17:02:19.747357       1 attach_detach_controller.go:328] Starting attach detach controller
I0430 17:02:19.747369       1 shared_informer.go:240] Waiting for caches to sync for attach detach
I0430 17:02:19.889931       1 controllermanager.go:605] Started "ttl-after-finished"
I0430 17:02:19.889998       1 ttlafterfinished_controller.go:109] Starting TTL after finished controller
I0430 17:02:19.890008       1 shared_informer.go:240] Waiting for caches to sync for TTL after finished
I0430 17:02:19.891889       1 shared_informer.go:240] Waiting for caches to sync for resource quota
W0430 17:02:19.895945       1 actual_state_of_world.go:539] Failed to update statusUpdateNeeded field in actual state of world: Failed to set statusUpdateNeeded to needed true, because nodeName="element-01" does not exist
I0430 17:02:19.905973       1 shared_informer.go:240] Waiting for caches to sync for garbage collector
I0430 17:02:19.920356       1 shared_informer.go:247] Caches are synced for ReplicationController 
I0430 17:02:19.920393       1 shared_informer.go:247] Caches are synced for deployment 
I0430 17:02:19.925554       1 shared_informer.go:247] Caches are synced for HPA 
I0430 17:02:19.927706       1 shared_informer.go:247] Caches are synced for endpoint_slice 
I0430 17:02:19.933005       1 shared_informer.go:247] Caches are synced for crt configmap 
I0430 17:02:19.941783       1 shared_informer.go:247] Caches are synced for endpoint_slice_mirroring 
I0430 17:02:19.942485       1 shared_informer.go:247] Caches are synced for namespace 
I0430 17:02:19.945164       1 shared_informer.go:247] Caches are synced for GC 
I0430 17:02:19.947326       1 shared_informer.go:247] Caches are synced for daemon sets 
I0430 17:02:19.949156       1 shared_informer.go:247] Caches are synced for node 
I0430 17:02:19.949180       1 range_allocator.go:173] Starting range CIDR allocator
I0430 17:02:19.949185       1 shared_informer.go:240] Waiting for caches to sync for cidrallocator
I0430 17:02:19.949191       1 shared_informer.go:247] Caches are synced for cidrallocator 
I0430 17:02:19.952493       1 range_allocator.go:374] Set node element-01 PodCIDR to [10.11.0.0/24]
I0430 17:02:19.952638       1 shared_informer.go:247] Caches are synced for job 
I0430 17:02:19.962720       1 shared_informer.go:247] Caches are synced for taint 
I0430 17:02:19.962744       1 taint_manager.go:187] "Starting NoExecuteTaintManager"
I0430 17:02:19.962752       1 node_lifecycle_controller.go:1397] Initializing eviction metric for zone: 
W0430 17:02:19.962773       1 node_lifecycle_controller.go:1012] Missing timestamp for Node element-01. Assuming now as a timestamp.
I0430 17:02:19.962801       1 node_lifecycle_controller.go:1163] Controller detected that all Nodes are not-Ready. Entering master disruption mode.
I0430 17:02:19.962808       1 shared_informer.go:247] Caches are synced for cronjob 
I0430 17:02:19.962827       1 event.go:294] "Event occurred" object="element-01" kind="Node" apiVersion="v1" type="Normal" reason="RegisteredNode" message="Node element-01 event: Registered Node element-01 in Controller"
I0430 17:02:19.965524       1 shared_informer.go:247] Caches are synced for ClusterRoleAggregator 
I0430 17:02:19.965927       1 event.go:294] "Event occurred" object="kube-system/kube-scheduler-element-01" kind="Pod" apiVersion="v1" type="Warning" reason="NodeNotReady" message="Node is not ready"
I0430 17:02:19.965974       1 event.go:294] "Event occurred" object="kube-system/etcd-element-01" kind="Pod" apiVersion="v1" type="Warning" reason="NodeNotReady" message="Node is not ready"
I0430 17:02:19.966113       1 shared_informer.go:247] Caches are synced for service account 
I0430 17:02:19.967490       1 shared_informer.go:247] Caches are synced for bootstrap_signer 
I0430 17:02:19.974921       1 shared_informer.go:247] Caches are synced for ReplicaSet 
I0430 17:02:19.979152       1 shared_informer.go:247] Caches are synced for TTL 
I0430 17:02:19.979895       1 shared_informer.go:247] Caches are synced for certificate-csrsigning-kubelet-serving 
I0430 17:02:19.980264       1 shared_informer.go:247] Caches are synced for certificate-csrsigning-kubelet-client 
I0430 17:02:19.980295       1 shared_informer.go:247] Caches are synced for certificate-csrsigning-kube-apiserver-client 
I0430 17:02:19.981431       1 shared_informer.go:247] Caches are synced for certificate-csrsigning-legacy-unknown 
I0430 17:02:19.983588       1 shared_informer.go:247] Caches are synced for certificate-csrapproving 
I0430 17:02:19.986755       1 shared_informer.go:247] Caches are synced for endpoint 
I0430 17:02:19.989035       1 shared_informer.go:247] Caches are synced for PVC protection 
I0430 17:02:19.990144       1 shared_informer.go:247] Caches are synced for TTL after finished 
I0430 17:02:19.991273       1 shared_informer.go:247] Caches are synced for disruption 
I0430 17:02:19.991287       1 disruption.go:371] Sending events to api server.
I0430 17:02:20.007015       1 shared_informer.go:247] Caches are synced for expand 
I0430 17:02:20.013206       1 shared_informer.go:247] Caches are synced for stateful set 
I0430 17:02:20.018380       1 shared_informer.go:247] Caches are synced for ephemeral 
I0430 17:02:20.024027       1 event.go:294] "Event occurred" object="kube-system/kube-controller-manager-element-01" kind="Pod" apiVersion="v1" type="Warning" reason="NodeNotReady" message="Node is not ready"
I0430 17:02:20.024101       1 event.go:294] "Event occurred" object="kube-system/kube-apiserver-element-01" kind="Pod" apiVersion="v1" type="Warning" reason="NodeNotReady" message="Node is not ready"
I0430 17:02:20.030173       1 shared_informer.go:247] Caches are synced for PV protection 
I0430 17:02:20.067632       1 shared_informer.go:247] Caches are synced for persistent volume 
I0430 17:02:20.095672       1 event.go:294] "Event occurred" object="kube-system/coredns" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set coredns-64897985d to 2"
I0430 17:02:20.108900       1 event.go:294] "Event occurred" object="kube-system/calico-kube-controllers" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set calico-kube-controllers-7c845d499 to 1"
I0430 17:02:20.147790       1 shared_informer.go:247] Caches are synced for attach detach 
I0430 17:02:20.170279       1 shared_informer.go:247] Caches are synced for resource quota 
I0430 17:02:20.192262       1 shared_informer.go:247] Caches are synced for resource quota 
I0430 17:02:20.606993       1 shared_informer.go:247] Caches are synced for garbage collector 
I0430 17:02:20.669694       1 shared_informer.go:247] Caches are synced for garbage collector 
I0430 17:02:20.669708       1 garbagecollector.go:155] Garbage collector: all resource monitors have synced. Proceeding to collect garbage
I0430 17:02:20.717846       1 event.go:294] "Event occurred" object="kube-system/calico-node" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: calico-node-rtrnd"
I0430 17:02:20.730759       1 event.go:294] "Event occurred" object="kube-system/kube-proxy" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kube-proxy-f8mcg"
I0430 17:02:21.189536       1 event.go:294] "Event occurred" object="kube-system/coredns-64897985d" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: coredns-64897985d-rld2s"
I0430 17:02:21.189560       1 event.go:294] "Event occurred" object="kube-system/calico-kube-controllers-7c845d499" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: calico-kube-controllers-7c845d499-mqdj7"
I0430 17:02:21.216703       1 event.go:294] "Event occurred" object="kube-system/coredns-64897985d" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: coredns-64897985d-96x4d"
I0430 17:02:50.204603       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for networkpolicies.crd.projectcalico.org
I0430 17:02:50.204654       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for networksets.crd.projectcalico.org
I0430 17:02:50.204687       1 shared_informer.go:240] Waiting for caches to sync for resource quota
I0430 17:02:50.305042       1 shared_informer.go:247] Caches are synced for resource quota 
I0430 17:02:50.619822       1 shared_informer.go:240] Waiting for caches to sync for garbage collector
I0430 17:02:50.919955       1 shared_informer.go:247] Caches are synced for garbage collector 
==== END logs for container kube-controller-manager of pod kube-system/kube-controller-manager-element-01 ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-f8mcg ====
I0430 17:02:22.397453       1 proxier.go:657] "Failed to load kernel module with modprobe, you can ignore this message when kube-proxy is running inside container without mounting /lib/modules" moduleName="ip_vs"
I0430 17:02:22.399356       1 proxier.go:657] "Failed to load kernel module with modprobe, you can ignore this message when kube-proxy is running inside container without mounting /lib/modules" moduleName="ip_vs_rr"
I0430 17:02:22.401123       1 proxier.go:657] "Failed to load kernel module with modprobe, you can ignore this message when kube-proxy is running inside container without mounting /lib/modules" moduleName="ip_vs_wrr"
I0430 17:02:22.402884       1 proxier.go:657] "Failed to load kernel module with modprobe, you can ignore this message when kube-proxy is running inside container without mounting /lib/modules" moduleName="ip_vs_sh"
E0430 17:02:22.407097       1 node.go:152] Failed to retrieve node info: Get "https://haproxy.cluster.local:6443/api/v1/nodes/element-01": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:02:23.481730       1 node.go:152] Failed to retrieve node info: Get "https://haproxy.cluster.local:6443/api/v1/nodes/element-01": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:02:25.546791       1 node.go:152] Failed to retrieve node info: Get "https://haproxy.cluster.local:6443/api/v1/nodes/element-01": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:02:29.693750       1 node.go:152] Failed to retrieve node info: Get "https://haproxy.cluster.local:6443/api/v1/nodes/element-01": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:02:39.291037       1 node.go:152] Failed to retrieve node info: Get "https://haproxy.cluster.local:6443/api/v1/nodes/element-01": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:02:57.456553       1 node.go:152] Failed to retrieve node info: Get "https://haproxy.cluster.local:6443/api/v1/nodes/element-01": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
I0430 17:02:57.456580       1 server.go:843] "Can't determine this node's IP, assuming 127.0.0.1; if this is incorrect, please set the --bind-address flag"
I0430 17:02:57.456589       1 server_others.go:138] "Detected node IP" address="127.0.0.1"
I0430 17:02:57.456609       1 server_others.go:561] "Unknown proxy mode, assuming iptables proxy" proxyMode=""
I0430 17:02:57.501902       1 server_others.go:206] "Using iptables Proxier"
I0430 17:02:57.501927       1 server_others.go:213] "kube-proxy running in dual-stack mode" ipFamily=IPv4
I0430 17:02:57.501934       1 server_others.go:214] "Creating dualStackProxier for iptables"
I0430 17:02:57.501943       1 server_others.go:491] "Detect-local-mode set to ClusterCIDR, but no IPv6 cluster CIDR defined, , defaulting to no-op detect-local for IPv6"
I0430 17:02:57.502170       1 server.go:656] "Version info" version="v1.23.6"
I0430 17:02:57.513957       1 conntrack.go:52] "Setting nf_conntrack_max" nf_conntrack_max=1048576
I0430 17:02:57.514073       1 config.go:317] "Starting service config controller"
I0430 17:02:57.514089       1 shared_informer.go:240] Waiting for caches to sync for service config
I0430 17:02:57.514102       1 config.go:226] "Starting endpoint slice config controller"
I0430 17:02:57.514107       1 shared_informer.go:240] Waiting for caches to sync for endpoint slice config
E0430 17:02:57.514794       1 event_broadcaster.go:262] Unable to write event: 'Post "https://haproxy.cluster.local:6443/apis/events.k8s.io/v1/namespaces/default/events": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host' (may retry after sleeping)
W0430 17:02:57.514808       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.EndpointSlice: Get "https://haproxy.cluster.local:6443/apis/discovery.k8s.io/v1/endpointslices?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
W0430 17:02:57.514822       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:02:57.514858       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.EndpointSlice: failed to list *v1.EndpointSlice: Get "https://haproxy.cluster.local:6443/apis/discovery.k8s.io/v1/endpointslices?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:02:57.514865       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
W0430 17:02:58.847265       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.EndpointSlice: Get "https://haproxy.cluster.local:6443/apis/discovery.k8s.io/v1/endpointslices?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:02:58.847301       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.EndpointSlice: failed to list *v1.EndpointSlice: Get "https://haproxy.cluster.local:6443/apis/discovery.k8s.io/v1/endpointslices?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
W0430 17:02:58.986515       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:02:58.986542       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
W0430 17:03:00.962711       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.EndpointSlice: Get "https://haproxy.cluster.local:6443/apis/discovery.k8s.io/v1/endpointslices?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:03:00.962769       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.EndpointSlice: failed to list *v1.EndpointSlice: Get "https://haproxy.cluster.local:6443/apis/discovery.k8s.io/v1/endpointslices?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
W0430 17:03:01.992221       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:03:01.992249       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
W0430 17:03:05.300055       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:03:05.300075       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
W0430 17:03:05.690878       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.EndpointSlice: Get "https://haproxy.cluster.local:6443/apis/discovery.k8s.io/v1/endpointslices?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:03:05.690906       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.EndpointSlice: failed to list *v1.EndpointSlice: Get "https://haproxy.cluster.local:6443/apis/discovery.k8s.io/v1/endpointslices?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:03:08.122117       1 event_broadcaster.go:262] Unable to write event: 'Post "https://haproxy.cluster.local:6443/apis/events.k8s.io/v1/namespaces/default/events": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host' (may retry after sleeping)
W0430 17:03:13.972930       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.EndpointSlice: Get "https://haproxy.cluster.local:6443/apis/discovery.k8s.io/v1/endpointslices?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:03:13.972964       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.EndpointSlice: failed to list *v1.EndpointSlice: Get "https://haproxy.cluster.local:6443/apis/discovery.k8s.io/v1/endpointslices?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
W0430 17:03:17.380916       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:03:17.380950       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:03:20.332232       1 event_broadcaster.go:262] Unable to write event: 'Post "https://haproxy.cluster.local:6443/apis/events.k8s.io/v1/namespaces/default/events": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host' (may retry after sleeping)
E0430 17:03:30.475905       1 event_broadcaster.go:262] Unable to write event: 'Post "https://haproxy.cluster.local:6443/apis/events.k8s.io/v1/namespaces/default/events": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host' (may retry after sleeping)
W0430 17:03:38.278052       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.EndpointSlice: Get "https://haproxy.cluster.local:6443/apis/discovery.k8s.io/v1/endpointslices?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:03:38.278092       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.EndpointSlice: failed to list *v1.EndpointSlice: Get "https://haproxy.cluster.local:6443/apis/discovery.k8s.io/v1/endpointslices?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:03:41.409296       1 event_broadcaster.go:262] Unable to write event: 'Post "https://haproxy.cluster.local:6443/apis/events.k8s.io/v1/namespaces/default/events": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host' (may retry after sleeping)
W0430 17:03:42.044224       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:03:42.044249       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:03:51.708579       1 event_broadcaster.go:262] Unable to write event: 'Post "https://haproxy.cluster.local:6443/apis/events.k8s.io/v1/namespaces/default/events": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host' (may retry after sleeping)
E0430 17:04:01.712916       1 event_broadcaster.go:262] Unable to write event: 'Post "https://haproxy.cluster.local:6443/apis/events.k8s.io/v1/namespaces/default/events": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host' (may retry after sleeping)
W0430 17:04:09.767882       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:04:09.767917       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:04:13.137181       1 event_broadcaster.go:262] Unable to write event: 'Post "https://haproxy.cluster.local:6443/apis/events.k8s.io/v1/namespaces/default/events": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host' (may retry after sleeping)
E0430 17:04:24.607393       1 event_broadcaster.go:262] Unable to write event: 'Post "https://haproxy.cluster.local:6443/apis/events.k8s.io/v1/namespaces/default/events": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host' (may retry after sleeping)
W0430 17:04:28.055116       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.EndpointSlice: Get "https://haproxy.cluster.local:6443/apis/discovery.k8s.io/v1/endpointslices?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:04:28.055175       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.EndpointSlice: failed to list *v1.EndpointSlice: Get "https://haproxy.cluster.local:6443/apis/discovery.k8s.io/v1/endpointslices?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:04:36.691168       1 event_broadcaster.go:262] Unable to write event: 'Post "https://haproxy.cluster.local:6443/apis/events.k8s.io/v1/namespaces/default/events": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host' (may retry after sleeping)
W0430 17:04:46.424850       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:04:46.424921       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:04:47.965441       1 event_broadcaster.go:262] Unable to write event: 'Post "https://haproxy.cluster.local:6443/apis/events.k8s.io/v1/namespaces/default/events": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host' (may retry after sleeping)
E0430 17:05:00.373518       1 event_broadcaster.go:262] Unable to write event: 'Post "https://haproxy.cluster.local:6443/apis/events.k8s.io/v1/namespaces/default/events": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host' (may retry after sleeping)
E0430 17:05:00.373546       1 event_broadcaster.go:212] Unable to write event '&v1.Event{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"element-01.16eabb52c2c41241", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, EventTime:time.Date(2022, time.April, 30, 17, 2, 57, 514049653, time.Local), Series:(*v1.EventSeries)(nil), ReportingController:"kube-proxy", ReportingInstance:"kube-proxy-element-01", Action:"StartKubeProxy", Reason:"Starting", Regarding:v1.ObjectReference{Kind:"Node", Namespace:"", Name:"element-01", UID:"element-01", APIVersion:"", ResourceVersion:"", FieldPath:""}, Related:(*v1.ObjectReference)(nil), Note:"", Type:"Normal", DeprecatedSource:v1.EventSource{Component:"", Host:""}, DeprecatedFirstTimestamp:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeprecatedLastTimestamp:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeprecatedCount:0}' (retry limit exceeded!)
W0430 17:05:08.465718       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.EndpointSlice: Get "https://haproxy.cluster.local:6443/apis/discovery.k8s.io/v1/endpointslices?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:05:08.465748       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.EndpointSlice: failed to list *v1.EndpointSlice: Get "https://haproxy.cluster.local:6443/apis/discovery.k8s.io/v1/endpointslices?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
W0430 17:05:20.155067       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:05:20.155092       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
W0430 17:05:40.732653       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.EndpointSlice: Get "https://haproxy.cluster.local:6443/apis/discovery.k8s.io/v1/endpointslices?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:05:40.732684       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.EndpointSlice: failed to list *v1.EndpointSlice: Get "https://haproxy.cluster.local:6443/apis/discovery.k8s.io/v1/endpointslices?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
W0430 17:05:58.495289       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:05:58.495320       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
W0430 17:06:13.801206       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.EndpointSlice: Get "https://haproxy.cluster.local:6443/apis/discovery.k8s.io/v1/endpointslices?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:06:13.801257       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.EndpointSlice: failed to list *v1.EndpointSlice: Get "https://haproxy.cluster.local:6443/apis/discovery.k8s.io/v1/endpointslices?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
W0430 17:06:56.134548       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:06:56.134616       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
W0430 17:07:00.503845       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.EndpointSlice: Get "https://haproxy.cluster.local:6443/apis/discovery.k8s.io/v1/endpointslices?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:07:00.503890       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.EndpointSlice: failed to list *v1.EndpointSlice: Get "https://haproxy.cluster.local:6443/apis/discovery.k8s.io/v1/endpointslices?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
W0430 17:07:28.325913       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:07:28.325950       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
W0430 17:07:34.157816       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.EndpointSlice: Get "https://haproxy.cluster.local:6443/apis/discovery.k8s.io/v1/endpointslices?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:07:34.157846       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.EndpointSlice: failed to list *v1.EndpointSlice: Get "https://haproxy.cluster.local:6443/apis/discovery.k8s.io/v1/endpointslices?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
W0430 17:08:04.236179       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:08:04.236212       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
W0430 17:08:28.086607       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.EndpointSlice: Get "https://haproxy.cluster.local:6443/apis/discovery.k8s.io/v1/endpointslices?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:08:28.086663       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.EndpointSlice: failed to list *v1.EndpointSlice: Get "https://haproxy.cluster.local:6443/apis/discovery.k8s.io/v1/endpointslices?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
W0430 17:08:42.907134       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:08:42.907180       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
W0430 17:09:23.479351       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.EndpointSlice: Get "https://haproxy.cluster.local:6443/apis/discovery.k8s.io/v1/endpointslices?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:09:23.479394       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.EndpointSlice: failed to list *v1.EndpointSlice: Get "https://haproxy.cluster.local:6443/apis/discovery.k8s.io/v1/endpointslices?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
W0430 17:09:40.828667       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
E0430 17:09:40.828714       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: Get "https://haproxy.cluster.local:6443/api/v1/services?labelSelector=%21service.kubernetes.io%2Fheadless%2C%21service.kubernetes.io%2Fservice-proxy-name&limit=500&resourceVersion=0": dial tcp: lookup haproxy.cluster.local on 192.168.121.1:53: no such host
==== END logs for container kube-proxy of pod kube-system/kube-proxy-f8mcg ====
==== START logs for container kube-scheduler of pod kube-system/kube-scheduler-element-01 ====
I0430 17:02:02.196304       1 serving.go:348] Generated self-signed cert in-memory
W0430 17:02:03.806097       1 requestheader_controller.go:193] Unable to get configmap/extension-apiserver-authentication in kube-system.  Usually fixed by 'kubectl create rolebinding -n kube-system ROLEBINDING_NAME --role=extension-apiserver-authentication-reader --serviceaccount=YOUR_NS:YOUR_SA'
W0430 17:02:03.806113       1 authentication.go:345] Error looking up in-cluster authentication configuration: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot get resource "configmaps" in API group "" in the namespace "kube-system"
W0430 17:02:03.806118       1 authentication.go:346] Continuing without authentication configuration. This may treat all requests as anonymous.
W0430 17:02:03.806121       1 authentication.go:347] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I0430 17:02:03.828726       1 server.go:139] "Starting Kubernetes Scheduler" version="v1.23.6"
I0430 17:02:03.829558       1 configmap_cafile_content.go:201] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I0430 17:02:03.829570       1 shared_informer.go:240] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I0430 17:02:03.829572       1 secure_serving.go:200] Serving securely on 127.0.0.1:10259
I0430 17:02:03.829610       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
W0430 17:02:03.831180       1 reflector.go:324] k8s.io/apiserver/pkg/server/dynamiccertificates/configmap_cafile_content.go:205: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0430 17:02:03.831185       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1beta1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W0430 17:02:03.831209       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0430 17:02:03.831221       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1beta1.CSIStorageCapacity: failed to list *v1beta1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0430 17:02:03.831220       1 reflector.go:138] k8s.io/apiserver/pkg/server/dynamiccertificates/configmap_cafile_content.go:205: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0430 17:02:03.831232       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0430 17:02:03.831452       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0430 17:02:03.831476       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W0430 17:02:03.831537       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0430 17:02:03.831555       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W0430 17:02:03.831615       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0430 17:02:03.831628       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W0430 17:02:03.831619       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0430 17:02:03.831647       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0430 17:02:03.831657       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0430 17:02:03.831664       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0430 17:02:03.831667       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0430 17:02:03.831677       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0430 17:02:03.831705       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0430 17:02:03.831765       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0430 17:02:03.831850       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0430 17:02:03.831868       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0430 17:02:03.831884       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0430 17:02:03.831903       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W0430 17:02:03.831894       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0430 17:02:03.831911       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0430 17:02:03.831915       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0430 17:02:03.831920       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0430 17:02:03.831924       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0430 17:02:03.831922       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0430 17:02:04.687170       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0430 17:02:04.687197       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0430 17:02:04.751698       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0430 17:02:04.751728       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W0430 17:02:04.849851       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0430 17:02:04.849865       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W0430 17:02:04.871515       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0430 17:02:04.871534       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W0430 17:02:04.913258       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1beta1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0430 17:02:04.913282       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1beta1.CSIStorageCapacity: failed to list *v1beta1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W0430 17:02:04.993339       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0430 17:02:04.993359       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W0430 17:02:05.213455       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0430 17:02:05.213476       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0430 17:02:05.240631       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0430 17:02:05.240647       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0430 17:02:05.240767       1 reflector.go:324] k8s.io/apiserver/pkg/server/dynamiccertificates/configmap_cafile_content.go:205: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0430 17:02:05.240787       1 reflector.go:138] k8s.io/apiserver/pkg/server/dynamiccertificates/configmap_cafile_content.go:205: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0430 17:02:05.247603       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0430 17:02:05.247630       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0430 17:02:05.258378       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0430 17:02:05.258394       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0430 17:02:05.356848       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0430 17:02:05.356868       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0430 17:02:05.361663       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0430 17:02:05.361678       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0430 17:02:05.377423       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0430 17:02:05.377437       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0430 17:02:05.421487       1 reflector.go:324] k8s.io/client-go/informers/factory.go:134: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0430 17:02:05.421511       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
I0430 17:02:07.630097       1 shared_informer.go:247] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file 
I0430 17:02:08.430904       1 leaderelection.go:248] attempting to acquire leader lease kube-system/kube-scheduler...
I0430 17:02:08.494773       1 leaderelection.go:258] successfully acquired lease kube-system/kube-scheduler
==== END logs for container kube-scheduler of pod kube-system/kube-scheduler-element-01 ====
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "1161"
    },
    "items": [
        {
            "metadata": {
                "name": "element-01.16eabb476fb69e57",
                "namespace": "default",
                "uid": "e1c578d9-cecd-46ca-b281-737fe67d53d6",
                "resourceVersion": "305",
                "creationTimestamp": "2022-04-30T17:02:08Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "element-01",
                "uid": "element-01"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "element-01"
            },
            "firstTimestamp": "2022-04-30T17:02:08Z",
            "lastTimestamp": "2022-04-30T17:02:08Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "element-01.16eabb477528d281",
                "namespace": "default",
                "uid": "02cdcb7b-2579-4b16-b52c-6a645e490b61",
                "resourceVersion": "310",
                "creationTimestamp": "2022-04-30T17:02:08Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "element-01",
                "uid": "element-01"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "element-01"
            },
            "firstTimestamp": "2022-04-30T17:02:08Z",
            "lastTimestamp": "2022-04-30T17:02:08Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "element-01.16eabb4776010bbe",
                "namespace": "default",
                "uid": "de9e6153-0367-44ee-9d05-fefd7ca9dd20",
                "resourceVersion": "311",
                "creationTimestamp": "2022-04-30T17:02:08Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "element-01",
                "uid": "element-01"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node element-01 status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "element-01"
            },
            "firstTimestamp": "2022-04-30T17:02:08Z",
            "lastTimestamp": "2022-04-30T17:02:08Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "element-01.16eabb4776012bda",
                "namespace": "default",
                "uid": "11c548d1-447f-4188-83ad-76bdb00ebd88",
                "resourceVersion": "312",
                "creationTimestamp": "2022-04-30T17:02:08Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "element-01",
                "uid": "element-01"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node element-01 status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "element-01"
            },
            "firstTimestamp": "2022-04-30T17:02:08Z",
            "lastTimestamp": "2022-04-30T17:02:08Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "element-01.16eabb4776013332",
                "namespace": "default",
                "uid": "5923ed51-4de2-42aa-ad6e-c67b0ce86c21",
                "resourceVersion": "313",
                "creationTimestamp": "2022-04-30T17:02:08Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "element-01",
                "uid": "element-01"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node element-01 status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "element-01"
            },
            "firstTimestamp": "2022-04-30T17:02:08Z",
            "lastTimestamp": "2022-04-30T17:02:08Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "element-01.16eabb4a0488a065",
                "namespace": "default",
                "uid": "b2cf1c20-1e79-46d0-805b-4757e80ee13b",
                "resourceVersion": "454",
                "creationTimestamp": "2022-04-30T17:02:19Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "element-01",
                "uid": "e84e5545-d2c2-4f6f-963a-56a817741180",
                "apiVersion": "v1"
            },
            "reason": "RegisteredNode",
            "message": "Node element-01 event: Registered Node element-01 in Controller",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2022-04-30T17:02:19Z",
            "lastTimestamp": "2022-04-30T17:02:19Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "1161"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "1161"
    },
    "items": [
        {
            "metadata": {
                "name": "kubernetes",
                "namespace": "default",
                "uid": "8704871a-96e3-4d03-8c26-e50bd02f3f9e",
                "resourceVersion": "214",
                "creationTimestamp": "2022-04-30T17:02:07Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 6443
                    }
                ],
                "clusterIP": "10.96.0.1",
                "clusterIPs": [
                    "10.96.0.1"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "1161"
    },
    "items": []
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "1161"
    },
    "items": []
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "1161"
    },
    "items": []
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "1161"
    },
    "items": []
}
