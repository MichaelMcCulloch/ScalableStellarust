#---------------------------------------------------------------------
# Example configuration.  See the full configuration manual online.
#
#   http://www.haproxy.org/download/1.7/doc/configuration.txt
#
#---------------------------------------------------------------------

global
    maxconn     20000
    log         127.0.0.1   local0
    user        haproxy
    chroot      /usr/share/haproxy
    pidfile     /run/haproxy.pid
    daemon

defaults
    log         global
    mode        http
    option      httplog
    option      dontlognull
    timeout     connect 5000
    timeout     client  240000
    timeout     server  240000
#---For the Kube-apiserver------------------------------------------------------------------
frontend apiservers
    bind            *:{{kubernetes_api_port}}
    mode            tcp
    option          tcplog
    option          forwardfor
    default_backend k8s_apiservers
backend k8s_apiservers
    mode            tcp
    balance         roundrobin
    option          tcplog
    option          ssl-hello-chk
    option          log-health-checks
{% for item in groups['control_plane'] %}
    server          {{hostvars[item]['inventory_hostname'] }}.{{domain}}    {{ hostvars[item]['ansible_enp5s0']['ipv4']['address'] }}:{{kubernetes_api_port}}   check
{% endfor %}
#---For the NGINX Ingress to the Kubernetes Dashboard------------------------------------------------------------------
frontend ingress
    bind            *:{{ingress_port}}
    mode            tcp
    option          tcplog
    option          forwardfor
    default_backend k8s_ingress
backend k8s_ingress
    mode            tcp
    option          tcplog
    option          ssl-hello-chk
    option          log-health-checks
    default-server  inter   10s     fall    2
{% for item in groups['control_plane'] %}
    server          {{hostvars[item]['inventory_hostname'] }}.{{domain}}    {{ hostvars[item]['ansible_enp5s0']['ipv4']['address'] }}:{{ingress_port}}   check
{% endfor %}
{% for item in groups['workers'] %}
    server          {{hostvars[item]['inventory_hostname'] }}.{{domain}}    {{ hostvars[item]['ansible_enp5s0']['ipv4']['address'] }}:{{ingress_port}}  check
{% endfor %}
#---------------------------------------------------------------------
frontend stats
   bind             *:{{haproxy_port}}
   mode             http
   http-request     set-var(txn.base)   base
   http-request     use-service         prometheus-exporter if { path /metrics }
   stats            enable
   stats            uri                 /
   stats            refresh             10s
