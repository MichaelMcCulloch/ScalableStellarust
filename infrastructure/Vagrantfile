Vagrant.configure("2") do |config|

    config.vm.box = "archlinux/archlinux"
    config.ssh.forward_agent = true
  
    config.vm.provider "libvirt" do |lv|
      lv.memory = 8192
      lv.cpus = 32
      lv.nested = true
			lv.default_prefix = "stellarustCluster_"
    end

    config.vm.network "private_network", 
      :dev => "virbr1", 
      :mode => "bridge", 
      :type => "dhcp", 
      :libvirt__domain_name => "datacenter.local",
      :libvirt__network_name => "datacenter.local",
      :libvirt__network_address => "172.28.128.0/24"

    config.vm.network "private_network", 
      :dev => "cluster", 
      :mode => "bridge", 
      :type => "dhcp", 
      :libvirt__domain_name => "cluster.local",
      :libvirt__network_name => "cluster.local",
      :libvirt__network_address => "10.11.0.0/16"


    config.vm.define "gamehost" do |gamehost| gamehost.vm.hostname = "gamehost" end

    config.vm.define "client-01" do |client| 	client.vm.hostname = "client-01" end
    config.vm.define "client-02" do |client| 	client.vm.hostname = "client-02" end

    config.vm.define "haproxy" do |proxy| proxy.vm.hostname = "haproxy" end
      
    config.vm.define "element-01" do |node| node.vm.hostname = "element-01"  end
    config.vm.define "element-02" do |node| node.vm.hostname = "element-02"  end
    config.vm.define "element-03" do |node| node.vm.hostname = "element-03"  end
    config.vm.define "element-04" do |node| node.vm.hostname = "element-04"  end
    config.vm.define "element-05" do |node| node.vm.hostname = "element-05"  end
    config.vm.define "element-06" do |node| node.vm.hostname = "element-06"  end
    config.vm.define "element-07" do |node| node.vm.hostname = "element-07"  end
    config.vm.define "element-08" do |node| node.vm.hostname = "element-08"  end
    config.vm.define "element-09" do |node| node.vm.hostname = "element-09"  end
    config.vm.define "element-10" do |node| node.vm.hostname = "element-10"  end


    config.vm.provision "ansible" do |ansible|
      ansible.playbook = "config.yml"
    end

    config.vm.provision :reload
end