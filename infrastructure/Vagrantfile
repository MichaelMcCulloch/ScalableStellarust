Vagrant.configure("2") do |config|

    config.vm.box = "archlinux/archlinux"
    config.ssh.forward_agent = true
    config.vm.synced_folder ".", "/vagrant", disabled: true
  
    config.vm.provider "libvirt" do |lv|
      lv.memory = 8192
      lv.cpus = 32
      lv.nested = true
			lv.default_prefix = "stellarustCluster_"
      lv.disk_bus = "virtio"
      lv.disk_driver :cache => "writeback"
      lv.nic_model_type = "virtio"
      lv.storage :file, bus: "virtio", cache: "writeback"
      lv.driver = "kvm"
      lv.video_type = "virtio"

    end

    config.vm.network "private_network", 
      :dev => "virbr1", 
      :mode => "bridge", 
      :type => "dhcp", 
      :libvirt__domain_name => "datacenter.local",
      :libvirt__network_name => "datacenter.local",
      :libvirt__network_address => "172.28.128.0/24"
      
    config.cache.scope = :machine
    define_datacenter config,3,7

    config.vm.provision "ansible" do |ansible|
      ansible.playbook = "config.yml"
    end

    config.vm.provision :reload
end

def define_datacenter(config, n_control_plane, n_worker)
  define_haproxy config
  define_k8s config,n_control_plane, n_worker
end

def define_haproxy(config)
  name = "haproxy"
  config.vm.define name do |proxy|
    proxy.vm.hostname = name 
    [8001, 6443].each do |port|
      proxy.vm.network "forwarded_port", guest: port, host: port
    end
    proxy.vm.provider "libvirt" do |lv|
      lv.memory = 8192
      lv.cpus = 8
    end 
  end
end

def define_k8s(config, n_control_plane, n_worker)
  define_control_plane config, n_control_plane
  define_worker_plane config, n_worker
end

def define_control_plane(config, n_control_plane)
  (1..n_control_plane).each do |i|
    define_master config,i
  end
end

def define_master(config, number)
  name = "master-#{number.to_s.rjust(2, "0")}"
  config.vm.define name do |node| 
    node.vm.hostname = name
    node.vm.provider "libvirt" do |lv|
      lv.memory = 8192
      lv.cpus = 8
    end
  end
end

def define_worker_plane(config, n_worker)
  (1..n_worker).each do |i| 
    define_worker config, i
  end
end

def define_worker(config, number) 
  name = "worker-#{number.to_s.rjust(2, "0")}"
  config.vm.define name  do |node| 
    node.vm.hostname = name
    node.vm.provider "libvirt" do |lv|
      lv.memory = 4096
      lv.cpus = 4
    end
  end 
end
